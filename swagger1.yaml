openapi: 3.0.0
info:
  version: '1.0'
  title: "hm-sls-backend"
servers:
- url: "https://devapi.hellomobility.nl"
  description: Development server
- url: "https://dwhapi.hellomobility.nl"
  description: PreProd server
- url: "https://api.hellomobility.nl/"
  description: Production server
 
paths:
  /v2/trips:
    get:
      tags:
        - Trips
      description: "trips"
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 35
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
       - in: query
         name: page
         schema:
            type: integer
            example: 1
       - in: query
         name: limit
         schema:
            type: integer
            example: 50
       - in: query
         name: vehicle_category
         schema:
            type: string
       - in: query
         name: vehicle
         schema:
            type: string
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Trips"
  /v2/trips-day-night-score:
      get:
        tags:
        - Trips
        parameters:
         - in: query
           name: organisation
           required: true
           schema:
              type: string
              example: 35
         - in: query
           name: from_date
           required: true
           schema:
              type: string
              example: 2022-01-01
         - in: query
           name: to_date
           required: true
           schema:
              type: string
              example: 2022-12-31
        responses:
          "200":
            description: 200 response
            content:
              application/json; charset=utf-8:
                 schema:
                   allOf:
                    - $ref: "#/components/schemas/TripsDayNightScore"
                    - example:
                        data:
                          - is_day_trip: true,
                            start_date_time: 2022-10-24
                            safe_score: "9.0"
                        message: "Data successful"
  /v2/drivers/{driverId}/road-type-distribution:
    get:
      tags:
        - Driver
      parameters:
       - in: path
         name: driverId
         required: true
         schema:
            type: string
            example: 32906
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverRoadTypeDistribution'
  /v2/vehicles/{vehicle_id}/day-night-score:
    get:
      tags:
        - Vehicle
      parameters:
       - in: path
         name: vehicle_id
         required: true
         schema:
            type: string
            example: 12262
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleDayNightScore'
                - example:
                        data:
                          - is_day_trip: true,
                            start_date_time: 2022-09-28
                            safe_score: "9.0"
                        message: "Data successful"
  /v2/vehicles:
    get:
      tags:
        - Vehicle
      description: "vehicles"
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 35
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
       - in: query
         name: vehicle
         schema:
            type: string
       - in: query
         name: vehicle_category
         schema:
            type: string
       - in: query
         name: view
         schema:
            type: string
            example: "license_plate"
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Vehicles"
  /v2/vehicles/{vehicle_id}/scores:
    get:
      tags:
        - Vehicle
      parameters:
       - in: path
         name: vehicle_id
         required: true
         schema:
            type: string
            example: 12262
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleScore'
                - example:
                        data:
                          - date: 2022-09-27
                            safe_score: "9.0"
  /v2/vehicle/{vehicle_id}/details:
    get:
      tags:
        - Vehicle
      parameters:
       - in: path
         name: vehicle_id
         required: true
         schema:
            type: string
            example: 12262
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleDetails'
  /v2/drivers/{driverId}/score:
    get:
      tags:
        - Driver
      parameters:
       - in: path
         name: driverId
         required: true
         schema:
            type: string
            example: 36639
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverScore'
  /v2/drivers/{driverId}:
    get:
      tags:
        - Driver
      parameters:
       - in: path
         name: driverId
         required: true
         schema:
            type: string
            example: 32913
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverDetails'
  /v2/drivers:
    get:
      tags:
        - Driver
      description: "drivers"
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 35
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Drivers" 
  /v2/drivers-report:
    get:
      tags:
        - Driver
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 35
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverReport'
  /v2/vehicles/category-by-organisation:
    get:
      tags:
        - Driver
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 35
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleCategoryByOrganisation'  
  /v2/user/user-list/{clientId}:
    get:
      tags:
        - Client
      description: "clientDetails"
      parameters:
       - in: path
         name: clientId
         required: true
         schema:
            type: string
            example: 307
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ClientDetails"
  /driving-summary:
    get:
      tags:
        - Dashboard
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 35
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DrivingSummary'
  /v2/trips-exception-type-distribution:
    get:
      tags:
        - Trips
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 35
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/TripsExceptionTypeDistribution'
  /v2/exceptions:
    get:
      tags:
        - Exception
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 35
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-01-01
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2022-12-31
       - in: query
         name: page
         required: true
         schema:
            type: string
            example: 1
       - in: query
         name: limit
         required: true
         schema:
            type: string
            example: 50
       - in: query
         name: vehicle
         schema:
            type: string
       - in: query
         name: vehicle_category
         schema:
            type: string
       - in: query
         name: exception_type
         schema:
            type: string
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/Exceptions'
  /organisationsV2:
    get:
     tags:
        - Client
     responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/OrganisationsV2'
  /common/add-user:
    post:
      tags:
        - Client
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddUser'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/AddUserResponse'
  /login:
    post:
      tags:
        - Auth
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/Login'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/LoginResponse'
  /client/create:
    post:
      tags:
        - Client
      parameters:
       - in: query
         name: language
         schema:
            type: string
            example: en
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddClient'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/AddClientResponse'
  /v2/groups:
    get:
      tags:
        - Groups
      parameters:
       - in: query
         name: org_id
         required: true
         schema:
            type: string
            example: 35
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/Groups'
  /v2/group/info:
    get:
      tags:
        - Groups
      parameters:
       - in: query
         name: org_id
         required: true
         schema:
            type: string
            example: 197
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/GroupsInfo'
  /v2/group/vehicle-list:
    get:
      tags:
        - Group-Vehicle
      parameters:
       - in: query
         name: org_id
         required: true
         schema:
            type: string
            example: 197
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/GroupsVehicleList'
  /v2/group/users:
    get:
      tags:
        - Group-User
      parameters:
       - in: query
         name: org_id
         required: true
         schema:
            type: string
            example: 197
       - in: query
         name: user_type
         required: true
         schema:
            type: string
            example: 1
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/GroupsUserList'
  /v2/group/company/users:
    get:
      tags:
        - Group-User
      parameters:
       - in: query
         name: org_id
         required: true
         schema:
            type: string
            example: 197
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/CompanyUsers'
  /v2/group/vehicle/assign-vehicle:
    post:
      tags:
        - Group-Vehicle
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AssignVehicleRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/AssignVehicle'
  /v2/group/users/assign:
    post:
      tags:
        - Group-User
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AssignUsersRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/AssignUsers'
  /v2/vehicle-top-listing:
    get:
      tags:
        - Dashboard
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 78,10,12,13,15,16,17,107,111,112,110,118,120,119,109,114,115,116,117,19,20,21,198,199,27,28,34,179,172,197,204,209,211,205,210,200,206,207,208,201,202,203,212,213,215,216,214,217,229,36,38,39,192,194,195,193,196,40,6,7,8,9,49
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-02-01 
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2023-01-31 
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleTopListing'
  /v2/vehicle/check-group-access:
    get:
      tags:
        - Vehicle
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 78,10,12,13,15,16,17,107,111,112,110,118,120,119,109,114,115,116,117,19,20,21,198,199,27,28,34,179,172,197,204,209,211,205,210,200,206,207,208,201,202,203,212,213,215,216,214,217,229,36,38,39,192,194,195,193,196,40,6,7,8,9,49,59,61,60,58,307
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-02-01 
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2023-01-31 
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/CheckGroupAccess'
  /v2/group/vehicle/unassign:
    post:
      tags:
        - Group-Vehicle
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GroupVehicleUnassignRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/GroupVehicleUnassign'
  /v2/group/vehicle/export:
    post:
      tags:
        - Group-Vehicle
      parameters:
       - in: query
         name: org_id
         required: true
         schema:
            type: string
            example: 197
       - in: query
         name: language
         required: true
         schema:
            type: string
            example: en 
       - in: query
         name: portal
         required: true
         schema:
            type: string
            example: GRIBB 
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GroupVehicleExportRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/GroupVehicleExport'
  /v2/vehicle/group-list:
    get:
      tags:
        - Group-Vehicle
      parameters:
       - in: query
         name: vehicle_id
         required: true
         schema:
            type: string
            example: 9598 
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/vehicleGroupList'
  /v2/trips-export:
    post:
      tags:
        - Trips
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 197
       - in: query
         name: language
         required: true
         schema:
            type: string
            example: en 
       - in: query
         name: portal
         required: true
         schema:
            type: string
            example: GRIBB 
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TripExportRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/GroupVehicleExport'
  /v2/driving-analytics-graph:
    get:
      tags:
        - Dashboard
      parameters:
       - in: query
         name: organisation
         required: true
         schema:
            type: string
            example: 97,204,209,211,205,210
       - in: query
         name: from_date
         required: true
         schema:
            type: string
            example: 2022-02-01 
       - in: query
         name: to_date
         required: true
         schema:
            type: string
            example: 2023-01-31
       - in: query
         name: score_type
         required: true
         schema:
            type: string
            example: safe_score
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/drivingAnalyticsGraph'
  /v2/driver/driver-list/{clientId}:
    get:
      tags:
        - Driver
      description: "Driver Client Details"
      parameters:
       - in: path
         name: clientId
         required: true
         schema:
            type: string
            example: 308
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DriverClientDetails"
  /v2/report-list:
    get:
      tags:
        - Client
      description: "Report List"
      parameters:
       - in: query
         name: organisation
         schema:
            type: string
            example: 101,74,75,76,77,102,103,108,109,122,123,124,110,112,113,114,115,125,83,84,86,87,88,89,93,95,96,99,49,104,105,106,107,117,81,50,116,79,51,118,119,70
       - in: query
         name: date
         schema:
            type: string
            example: 12-2022
       - in: query
         name: sortKey
         schema:
            type: string
            example: "org_id"
       - in: query
         name: sortBy
         schema:
            type: string
            example: "DESC"
       - in: query
         name: page
         schema:
            type: string
            example: "1"
       - in: query
         name: limit
         schema:
            type: string
            example: "100"         
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ClientReport"
  /client/list:
    get:
      tags:
        - Client
      description: "Client List"
      parameters:
       - in: query
         name: page
         schema:
            type: string
            example: "1"
       - in: query
         name: limit
         schema:
            type: string
            example: "100"         
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ClientList"
  /v2/driver/check-in-out/list:
    get:
      tags:
        - Driver Check In
      description: "Check In Out"
      parameters:
       - in: query
         name: organisation
         schema:
            type: string
            example: 299,300,301,81,82,84,79,46,45,78,10,12,13,15,16,17,107,111,112,110,118,120,119,109,114,115,116,117,19,20,21,198,199,27,28,34,179,172,197,204,209,211,205,210,200,206,207,208,201,202,203,212,213,215,216,214,217,229,36,38,39,192,194,195,193,196,40,6,7,8,9,49,29,181,30,32,180,33,4,281,283,284,282,285,286,69,50,2,219,167,220,222,223,230,221,224,226,225,218,227,228,231,232,233,234,51,54,55,57,59,61,60,58,63,64,62,66,67,68,65,70,71,72,73,74,169,135,307,76,77,75,308,174,175,176,173,235,166
       - in: query
         name: from_date
         schema:
            type: string
            example: 2022-11-01
       - in: query
         name: to_date
         schema:
            type: string
            example: 2023-01-31  
       - in: query
         name: page
         schema:
            type: string
            example: "1" 
       - in: query
         name: limit
         schema:
            type: string
            example: "50"         
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CheckInOut"
  /v2/group/create:
    post:
      tags:
        - Groups
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GroupCreateRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/GroupCreate'
  /v2/group:
    post:
      tags:
        - Groups
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeleteGroupRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DeleteGroup'
  /v2/group/company/drivers:
    get:
      tags:
        - Group-Driver
      description: "Company driver"
      parameters:
       - in: query
         name: org_id
         schema:
            type: string
            example: 197        
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CompanyDriver"
  /v2/group/user/unassign:
    post:
      tags:
        - Groups
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GroupUserUnassignRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/GroupUserUnassign'
  /v2/user/update:
    put:
      tags:
        - Client
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/UpdateClient'
  /v2/trips-event-type-distribution:
    get:
      tags:
        - Trips
      description: "Trips Event Type Distribution"
      parameters:
       - in: query
         name: organisation
         schema:
            type: string
            example: 299,300,301,81,82,84,79,46,45,78,10,12,13,15,16,17,107,111,112,110,118,120,119,109,114,115,116,117,19,20,21,198,199,27,28,34,179,172,197,204,209,211,205,210,200,206,207,208,201,202,203,212,213,215,216,214,217,229,36,38,39,192,194,195,193,196,40,6,7,8,9,49,29,181,30,32,180,33,4,281,283,284,282,285,286,69,50,2,219,167,220,222,223,230,221,224,226,225,218,227,228,231,232,233,234,51,54,55,57,59,61,60,58,63,64,62,66,67,68,65,70,71,72,73,74,169,135,307,76,77,75,308,174,175,176,173,235,166  
       - in: query
         name: from_date
         schema:
            type: string 
            example: 2022-11-01
       - in: query
         name: to_date
         schema:
            type: string
            example: 2023-01-31    
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/TripsEventTypeDistribution"
  /v2/trips-road-type-distribution:
    get:
      tags:
        - Trips
      description: "Trips Event Type Distribution"
      parameters:
       - in: query
         name: organisation
         schema:
            type: string
            example: 299,300,301,81,82,84,79,46,45,78,10,12,13,15,16,17,107,111,112,110,118,120,119,109,114,115,116,117,19,20,21,198,199,27,28,34,179,172,197,204,209,211,205,210,200,206,207,208,201,202,203,212,213,215,216,214,217,229,36,38,39,192,194,195,193,196,40,6,7,8,9,49,29,181,30,32,180,33,4,281,283,284,282,285,286,69,50,2,219,167,220,222,223,230,221,224,226,225,218,227,228,231,232,233,234,51,54,55,57,59,61,60,58,63,64,62,66,67,68,65,70,71,72,73,74,169,135,307,76,77,75,308,174,175,176,173,235,166  
       - in: query
         name: from_date
         schema:
            type: string 
            example: 2022-02-01
       - in: query
         name: to_date
         schema:
            type: string
            example: 2023-01-31 
       - in: query
         name: score_type
         schema:
            type: string
            example: safe_score    
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/TripsRoadTypeDistribution"
  /trips/{tripId}:
    get:
      tags:
        - Trips
      description: "Trip details" 
      parameters:
        - in: path
          name: tripId
          required: true
          schema:
            type: string
            example: '110000000000255205'
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/TripDetails"
  /v2/trips-exception-counts:
    post:
      tags:
        - Trips
      description: "Trips Exception Count"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TripExceptionCountRequestBody'      
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/TripExceptionCount"
  /v2/driver-shift-score/{driver_check_in_out_id}:
    get:
      tags:
        - Driver Check In
      description: "Trips Exception Count" 
      parameters:
        - in: path
          name: driver_check_in_out_id
          required: true
          schema:
            type: string
            example: 109    
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ShiftScore"

  /identification/check-driver-access/{org_id}:
    get:
      tags:
        - Driver Check In
      description: "" 
      parameters:
        - in: path
          name: org_id
          required: true
          schema:
            type: string
            example: 109    
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CheckDriverAccess"
  /v2/drivers-export:
    post:
      tags:
        - Driver
      description: "" 
      parameters:
        - in: query
          name: organisation
          required: true
          schema:
            type: string
            example: 299,300,301,81,82,84,79,46,45,78,10,12,13,15,16,17,107,111,112,110,118,120,119,109,114,115,116,117,19,20,21,198,199,27,28,34,179,172,197,204,209,211,205,210,200,206,207,208,201,202,203,212,213,215,216,214,217,229,36,38,39,192,194,195,193,196,40,6,7,8,9,49,29,181,30,32,180,33,4,281,283,284,282,285,286,69,50,2,219,167,220,222,223,230,221,224,226,225,218,227,228,231,232,233,234,51,54,55,57,59,61,60,58,63,64,62,66,67,68,65,70,71,72,73,74,169,135,307,76,77,75,308,174,175,176,173,235,166   
        - in: query
          name: from_date
          schema:
            type: string
            example: 2022-02-01
        - in: query
          name: to_date
          schema:
            type: string
            example: 2023-01-31
        - in: query
          name: portal
          schema:
            type: string
            example: GRIBB
        - in: query
          name: language
          schema:
            type: string
            example: en
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DriversExportRequestBody'
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DriversExport"
  /v2/trips/report:
    get:
      tags:
        - Trips
      description: "" 
      parameters:
        - in: query
          name: vehicle
          schema:
            type: string
            example: 12607
        - in: query
          name: driver
          schema:
            type: string
        - in: query
          name: vehicle_category
          schema:
            type: string   
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/TripsReport"
  /v2/user/details:
    get:
      tags:
        - Client
      description: "" 
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
            example: 1  
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                  - $ref: "#/components/schemas/UserDetails"
  /v2/user/update-driver:
    put:
      tags:
        - Client
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateDriverRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/UpdateDriver'
  /v2/vehicles-export:
    post:
      tags:
        - Vehicle
      parameters:
        - in: query
          name: organisation
          required: true
          schema:
            type: string
            example: 299,300,301,81,82,84,79,46,45,78,10,12,13,15,16,17,107,111,112,110,118,120,119,109,114,115,116,117,19,20,21,198,199,27,28,34,179,172,197,204,209,211,205,210,200,206,207,208,201,202,203,212,213,215,216,214,217,229,36,38,39,192,194,195,193,196,40,6,7,8,9,49,29,181,30,32,180,33,4,281,283,284,282,285,286,69,50,2,219,167,220,222,223,230,221,224,226,225,218,227,228,231,232,233,234,51,54,55,57,59,61,60,58,63,64,62,66,67,68,65,70,71,72,73,74,169,135,307,76,77,308,174,175,176,173,319,317,320,318,310,235,166
        - in: query
          name: from_date
          required: true
          schema:
            type: string
            example: 2022-02-01
        - in: query
          name: to_date
          required: true
          schema:
            type: string
            example: 2023-01-31
        - in: query
          name: portal
          schema:
            type: string
            example: GRIBB  
        - in: query
          name: language
          schema:
            type: string
            example: en    
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VehicleExportRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleExport'
  /v2/exceptions-export:
    post:
      tags:
        - Exception
      parameters:
        - in: query
          name: organisation
          required: true
          schema:
            type: string
            example: 299,300,301,81,82,84,79,46,45,78,10,12,13,15,16,17,107,111,112,110,118,120,119,109,114,115,116,117,19,20,21,198,199,27,28,34,179,172,197,204,209,211,205,210,200,206,207,208,201,202,203,212,213,215,216,214,217,229,36,38,39,192,194,195,193,196,40,6,7,8,9,49,29,181,30,32,180,33,4,281,283,284,282,285,286,69,50,2,219,167,220,222,223,230,221,224,226,225,218,227,228,231,232,233,234,51,54,55,57,59,61,60,58,63,64,62,66,67,68,65,70,71,72,73,74,169,135,307,76,77,308,174,175,176,173,319,317,320,318,310,235,166
        - in: query
          name: from_date
          required: true
          schema:
            type: string
            example: 2022-02-01
        - in: query
          name: to_date
          required: true
          schema:
            type: string
            example: 2023-01-31
        - in: query
          name: portal
          schema:
            type: string
            example: GRIBB  
        - in: query
          name: language
          schema:
            type: string
            example: en    
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ExceptionsExportRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ExceptionsExport'
  /v2/report-export:
    post:
      tags:
        - Client
      parameters:
        - in: query
          name: organisation
          required: true
          schema:
            type: string
            example: 35
        - in: query
          name: date
          required: true
          schema:
            type: string
            example: 01-2022
        - in: query
          name: sortKey
          schema:
            type: string
            example: org_id
        - in: query
          name: portal
          schema:
            type: string
            example: GRIBB  
        - in: query
          name: language
          schema:
            type: string
            example: en  
        - in: query
          name: sortBy
          schema:
            type: string
            example: DESC   
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ReportExportRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ReportExport'
  /v2/client-user-management/user/export:
    post:
      tags:
        - Client
      parameters:
        - in: query
          name: org_id
          required: true
          schema:
            type: string
            example: 172
        - in: query
          name: user_type
          schema:
            type: string
            example: 0
        - in: query
          name: portal
          schema:
            type: string
            example: GRIBB
        - in: query
          name: language
          schema:
            type: string
            example: en  
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ClientUserExportRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ClientUserExport'
  /v2/client-user-management/driver/export:
    post:
      tags:
        - Client
      parameters:
        - in: query
          name: organisation
          required: true
          schema:
            type: string
            example: 172
        - in: query
          name: user_type
          schema:
            type: string
            example: 1
        - in: query
          name: portal
          schema:
            type: string
            example: GRIBB
        - in: query
          name: language
          schema:
            type: string
            example: en  
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ClientDriverExportRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ClientDriverExport'
  /v2/group/user/export:
    post:
      tags:
        - Group-User
      parameters:
        - in: query
          name: org_id
          required: true
          schema:
            type: string
            example: 172
        - in: query
          name: user_type
          schema:
            type: string
            example: 0
        - in: query
          name: portal
          schema:
            type: string
            example: GRIBB
        - in: query
          name: language
          schema:
            type: string
            example: en  
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GroupUserExportRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/GroupUserExport'
  /v2/driver-shift:
    get:
      tags:
        - Driver Check In
      parameters:
        - in: query
          name: vehicle
          required: true
          schema:
            type: string
            example: 12607
        - in: query
          name: page
          schema:
            type: string
            example: 1
        - in: query
          name: limit
          schema:
            type: string
            example: 50
        - in: query
          name: vehicle_category
          schema:
            type: string  
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverShift'
  
  /v2/drivers/worst-trips:
    get:
      tags:
        - Driver
      parameters:
        - in: query
          name: from_date
          required: true
          schema:
            type: string
            example: 2022-01-01
        - in: query
          name: to_date
          schema:
            type: string
            example: 2022-12-31
        - in: query
          name: driver
          schema:
            type: string
            example: 32906
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverWorstTrips'
  /vehicle-document-checklist/exports:
    post:
      tags:
        - Vehicle
      parameters:
        - in: query
          name: org_id
          required: true
          schema:
            type: string
            example: 172
        - in: query
          name: portal
          schema:
            type: string
            example: GRIBB
        - in: query
          name: language
          schema:
            type: string
            example: en  
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VehicleDocumentCheckListRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleDocumentCheckList'
  /vehicle/damages/exports:
    post:
      tags:
        - Vehicle
      parameters:
        - in: query
          name: vehicle_id
          required: true
          schema:
            type: string
            example: 12607
        - in: query
          name: view
          required: true
          schema:
            type: string
            example: driver
        - in: query
          name: portal
          schema:
            type: string
            example: GRIBB
        - in: query
          name: language
          schema:
            type: string
            example: en  
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VehicleDamagesExportRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleDamagesExport'
  /pre-vehicle-driver-declarations/exports:
    post:
      tags:
        - Vehicle
      parameters:
        - in: query
          name: driver_check_in_out_id
          required: true
          schema:
            type: string
            example: 78
        - in: query
          name: portal
          schema:
            type: string
            example: GRIBB
        - in: query
          name: language
          schema:
            type: string
            example: en  
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PreVehicleDriverDeclarationRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/PreVehicleDriverDeclaration'
  /logout:
    get:
      tags:
        - Auth
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/Logout'
  /forgot-password:
    post:
      tags:
        - Auth
      parameters:
        - in: query
          name: language
          schema:
            type: string
            example: en  
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ForgotPasswordRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ForgotPassword'
  /reset-password:
    post:
      tags:
        - Auth
      parameters:
        - in: query
          name: accessKey
          schema:
            type: string 
            example: "something" 
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ResetPasswordRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ResetPassword'
  /change-password:
    post:
      tags:
        - Auth
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ChangePasswordRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ChangePassword'
  /profile/{adminId}:
    put:
      tags:
        - Client
      parameters:
        - in: path
          name: adminId
          required: true
          schema:
            type: string
            example: 1 
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ProfileRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/Profile'
  /profile:
    get:
      tags:
        - Client
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/GetProfile'
  /profile/color-code:
    put:
      tags:
        - Client
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ProfileColorRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ProfileColor'
  /client/update/{clientUserId}:
    put:
      tags:
        - Client
      parameters:
        - in: path
          name: clientUserId
          required: true
          schema:
            type: string
            example: 320
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ClientUpdateRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ClientUpdate'
  /client/archived/{client_id}:
    put:
      tags:
        - Client
      parameters:
        - in: path
          name: client_id
          required: true
          schema:
            type: string
            example: 320
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ClientArchived'
  /client/resource/list:
    post:
      tags:
        - Trips
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ClientResourceList'
  /trips/alerts:
    post:
      tags:
        - Trips
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TripsAlertRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/TripsAlert'
  /v2/mobile/driving-analytics-graph:
    get:
      tags:
        - Dashboard
      parameters:
        - in: query
          name: organisation
          required: true
          schema:
            type: string
            example: 172
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/MobileDrivingAnalyticsGraph'
  /tsp-companies:
    get:
      tags:
        - Dashboard
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/TspCompanies'    
  /driver/check-in-out/info:
    get:
      tags:
        - Driver Check In
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
            example: 1
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverCheckInOutInfo'
  /driver/check-in-out/out:
    put:
      tags:
        - Driver Check In
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DriverCheckedOutRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverCheckedOut'
  /driver/check-in-out/in:
    post:
      tags:
        - Driver Check In 
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DriverCheckInRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverCheckIn'
  /vehicle/{vehicleId}/damages:
    get:
      tags:
        - Driver Check In
      parameters:
        - in: path
          name: vehicleId
          required: true
          schema:
            type: integer
            example: 12664
        - in: query
          name: view
          schema:
            type: string
            example: 'driver'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleDamage'
    post:
      tags:
        - Driver Check In
      parameters:
        - in: path
          name: vehicleId
          required: true
          schema:
            type: integer
            example: 12664
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddVehicleDamageRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/AddVehicleDamage'
  /vehicle/{vehicleId}/damages/{damageId}:
    get:
      tags:
        - Driver Check In
      parameters:
        - in: path
          name: vehicleId
          required: true
          schema:
            type: integer
            example: 12664
        - in: path
          name: damageId
          required: true
          schema:
            type: integer
            example: 3
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleDamageDetails'  
  /vehicle/{vehicleId}/damages/{damageId}/resolve:
    post:
      tags:
        - Driver Check In
      parameters:
        - in: path
          name: vehicleId
          required: true
          schema:
            type: integer
            example: 12664
        - in: path
          name: damageId
          required: true
          schema:
            type: integer
            example: 3
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VehicleDamageResolutionRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleDamageResolution'
  /vehicle-document-checklist/{org_id}:
    get:
      tags:
        - Driver Check In
      parameters:
        - in: path
          name: org_id
          required: true
          schema:
            type: integer
            example: 172
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleDocumentCheckListOrg'  
  /pre-vehicle-driver-declarations/{driver_check_in_out_id}:
    get:
      tags:
        - Driver Check In
      parameters:
        - in: path
          name: driver_check_in_out_id
          required: true
          schema:
            type: integer
            example: 78
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/PreVehicleDriverDeclaration2' 
  /vehicle-document-checklist/{org_id}/questions:
    post:
      tags:
        - Driver Check In
      parameters:
        - in: path
          name: org_id
          required: true
          schema:
            type: integer
            example: 172
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VehicleDocumentCheckListQuestionsRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleDocumentCheckListQuestions' 
  /vehicle-document-checklist/{org_id}/questions/{questionId}:
    put:
      tags:
        - Driver Check In

      parameters:
        - in: path
          name: org_id
          required: true
          schema:
            type: integer
            example: 172
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            example: 35
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/VehicleDocumentCheckListOrgQuestionsRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleDocumentCheckListQuestions'
    delete:
      tags:
        - Driver Check In
      parameters:
        - in: path
          name: org_id
          required: true
          schema:
            type: integer
            example: 172
        - in: path
          name: questionId
          required: true
          schema:
            type: integer
            example: 35
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleDocumentCheckListQuestionsDelete'
  /drivers/login:
    post:
      tags:
        - Driver 
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DriverLoginRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverLogin'
  /drivers/forgot-password:
    post:
      tags:
        - Driver 
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DriverForgotPasswordRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverForgotPassword'
  /drivers/change-password:
    post:
      tags:
        - Driver 
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DriverChangePasswordRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverChangePassword'
  /drivers/update-profile:
    post:
      tags:
        - Driver 
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DriverUpdateProfileRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverUpdateProfile'     
  /identification/driverList:
    get:
      tags:
        - Driver
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 50
        - in: query
          name: organisation
          required: true
          schema:
            type: integer
            example: 172
        - in: query
          name: from_date
          schema:
            type: string
            example: 2022-01-01
        - in: query
          name: to_date
          schema:
            type: string
            example: 2022-12-31
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/IdentificationDriverList' 
  /drivers/reset-password:
    post:
      tags:
        - Driver 
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DriverResetPasswordRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverResetPassword'
  /drivers/createGoal:  
    post:
      tags:
        - Driver 
      parameters:
      - in: query
        name: goal_enabled
        schema:
          type: boolean
          example: true
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DriverCreateGoalRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverCreateGoal'
  /drivers/updateGoal:
    put:
      tags:
        - Driver 
      parameters:
      - in: query
        name: goal_enabled
        schema:
          type: boolean
          example: true
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DriverUpdateGoalRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverUpdateGoal'
  /drivers/goal:
    get:
      tags:
        - Driver
      parameters:
        - in: query
          name: driver_id
          required: true
          schema:
            type: integer
            example: 36591
        - in: query
          name: goal_date
          schema:
            type: string
            example: "2022-07-26"
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/GetDriverGoal'
  /drivers/verifyOtp:
    post:
      tags:
        - Driver 
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DriverOTPVerificationRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriverOTPVerification'
  /drivers/goalGraph:
    get:
      tags:
        - Driver
      parameters:
        - in: query
          name: driver_id
          required: true
          schema:
            type: integer
            example: 36591
        - in: query
          name: exception_type
          required: true
          schema:
            type: string
            example: "speed"
        - in: query
          name: from_date
          schema:
            type: string
            example: "2022-01-01"
        - in: query
          name: to_date
          schema:
            type: string
            example: "2022-12-31"
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/DriversGoalGraph'
  /vehicle/scoreComparision:
    get:
      tags:
        - Score Comparison
      parameters:
        - in: query
          name: org_id
          required: true
          schema:
            type: integer
            example: 26
        - in: query
          name: from_date
          required: true
          schema:
            type: string
            example: "2022-01-01"
        - in: query
          name: to_date
          required: true
          schema:
            type: string
            example: "2022-12-31"
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ScoreComparison'
  /drivers/scoreComparision:
    get:
      tags:
        - Score Comparison
      parameters:
        - in: query
          name: org_id
          required: true
          schema:
            type: integer
            example: 26
        - in: query
          name: from_date
          required: true
          schema:
            type: string
            example: "2022-01-01"
        - in: query
          name: to_date
          required: true
          schema:
            type: string
            example: "2022-12-31"
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ScoreComparison'
  /vehicles/report:
    get:
      tags:
        - Vehicle
      parameters:
        - in: query
          name: organisation
          required: true
          schema:
            type: integer
            example: 26
        - in: query
          name: custom_filter
          required: true
          schema:
            type: boolean
            example: true
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/VehicleReport'
  /check-in-out/trip-list:
    get:
      tags:
        - Trips
      parameters:
        - in: query
          name: driver_check_in_out_id
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: page
          required: true
          schema:
            type: integer
            example: 1
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 50
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/CheckInoutTripList'
  /organisations/{orgId}/tsps:
    get:
      tags:
        - Tsps
      parameters:
        - in: query
          name: view
          schema:
            type: string
            example: Other
        - in: path
          name: orgId
          required: true
          schema:
            type: integer
            example: 172
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/TspList'
  /organisations/{orgId}/tsps/create:
    post:
      tags:
        - Tsps
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: integer
            example: 300
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddTspRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/AddTsp'
  /organisations/{orgId}/tsps/{tsp_orgId}/archive:
    put:
      tags:
        - Tsps
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: integer
            example: 332
        - in: path
          name: tsp_orgId
          required: true
          schema:
            type: integer
            example: 333
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ArchiveTspRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ArchiveTsp'
  /organisations/{orgId}/tsps/{tsp_orgId}:
    put:
      tags:
        - Tsps
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: integer
            example: 300
        - in: path
          name: tsp_orgId
          required: true
          schema:
            type: integer
            example: 306
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateTspRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/UpdateTsp'
  /organisations/{orgId}/tsps/clientAssetsCount:
    get:
      tags:
        - Tsps
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: string
            example: 76
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/clientAssetsCount'
  /organisations/{orgId}/tsps/{tsp_orgId}/details:
    get:
      tags:
        - Tsps
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: string
            example: 332
        - in: path
          name: tsp_orgId
          required: true
          schema:
            type: string
            example: 333
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/TspDetails'
  /organisations/{orgId}/tsps/ingestion-alert:
    get:
      tags:
        - Tsps
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: string
            example: 332
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/IngestionData'
  /organisations/{orgId}/tsps/export:
    post:
      tags:
        - Tsps
      parameters:
        - in: path
          name: orgId
          required: true
          schema:
            type: integer
            example: 76
        - in: query
          name: language
          required: true
          schema:
            type: string
            example: en
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/TspExportRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/TspExport'
  /v2/organisations/tsp-verification:
    post:
      tags:
        - Tsps
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddTspRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/TspVerification'
  /organisations/tsps:
    get:
      tags:
        - Tsps
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/OrganisationTsps'
  /contact-support:
    post:
      tags:
        - Driver app
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ContactSupportRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/ContactSupport'
  /jira-ticket:
    post:
      tags:
        - Driver app
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/JiraTicketRequestBody'
      responses:
        "200":
          description: "200 response"
  /appversion/{app_name}/{os_type}:
    get:
      tags:
        - Driver app
      parameters:
        - in: path
          name: app_name
          required: true
          schema:
            type: string
            example: "gribb"
        - in: path
          name: os_type
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/AppVersion'
  /appversion:
    post:
      tags:
        - Driver app
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AppVersionRequestBody'
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/AddAppVersion' 
  /trips/{tripId}/exceptions:
    get:
      tags:
        - Trips
      parameters:
        - in: path
          name: tripId
          required: true
          schema:
            type: integer
            example: 400000000000108861
      responses:
        "200":
          description: "200 response"
          content:
            application/json; charset=utf-8:
              schema:
               allOf:
                - $ref: '#/components/schemas/TripException'

    
     
    
components:
  schemas:
    Trips:
      title: Trips
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TripList'
      example:
        data:
          count: 1
          rows:
          - id: '700000000000085806'
            vehicle_id: 12626
            start_date_time: "2022-10-24T06:40:11.000Z"
            stop_date_time: "2022-10-24T07:15:15.000Z"
            distance: 51
            start_location_address: "1e wormenseweg 504 apeldoorn 7333gz"
            stop_location_address: "De Driest 18 Nijkerk 3861RD"
            start_latitude: "52.191685"
            start_longitude: "5.974643"
            finish_latitude: "52.240708"
            finish_longitude: "5.481243"
            license_plate: "V-885-KX"
            total_exception: 0
            safe_score: "9.0"
            driver_detail: {
                              id: 36591,
                              first_name: "De**",
                              last_name: "De**",
                              email: "demo@gribb.tech"
                            }
    TripList:
      title: TripList
      required:
      - count
      - rows
      type: object
      properties:
        count:
          type: integer
          format: int32
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Row'
          description: ''
      example:
        count: 1
        rows:
        - id: '700000000000085806'
          vehicle_id: 12626
          start_date_time: "2022-10-24T06:40:11.000Z"
          stop_date_time: "2022-10-24T07:15:15.000Z"
          distance: 51
          start_location_address: "1e wormenseweg 504 apeldoorn 7333gz"
          stop_location_address: "De Driest 18 Nijkerk 3861RD"
          start_latitude: "52.191685"
          start_longitude: "5.974643"
          finish_latitude: "52.240708"
          finish_longitude: "5.481243"
          license_plate: "V-885-KX"
          total_exception: 0
          safe_score: "9.0"
    Row:
      title: Row
      required:
      - id
      - vehicle_id
      - start_date_time
      - stop_date_time
      - distance
      - start_location_address
      - stop_location_address
      - start_latitude
      - stop_latitude
      - finish_latitude
      - finish_longitude
      - license_plate
      - total_exception
      - safe_score
      - driver_detail
      type: object
      properties:
        id:
          type: string
        vehicle_id:
          type: integer
          format: int32
        start_date_time:
          type: string
        stop_date_time:
          type: string
        distance:
          type: integer
          format: int32
        start_location_address:
          type: string
        stop_location_address:
          type: string
        start_latitude:
          type: string
        stop_latitude:
          type: string
        finish_latitude:
          type: string
        finish_longitude:
          type: string
        license_plate:
          type: string
        total_exception:
          type: integer
          format: int32
        safe_score:
          type: string
        driver_detail:
          $ref: '#/components/schemas/DriverDetail'
      example:
        id: '700000000000085806'
        vehicle_id: 12626
        start_date_time: "2022-10-24T06:40:11.000Z"
        stop_date_time: "2022-10-24T07:15:15.000Z"
        distance: 51
        start_location_address: "1e wormenseweg 504 apeldoorn 7333gz"
        stop_location_address: "De Driest 18 Nijkerk 3861RD"
        start_latitude: "52.191685"
        start_longitude: "5.974643"
        finish_latitude: "52.240708"
        finish_longitude: "5.481243"
        license_plate: "V-885-KX"
        total_exception: 0
        safe_score: "9.0"
    DriverDetail:
      title: DriverDetail
      required:
      - id 
      - first_name
      - last_name
      - email 
      type: object
      properties:
        id:
          type: integer
          format: int32
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
      example:
        id: 36591
        first_name: "De**"
        last_name: "De**"
        email: "demo@gribb.tech"
    TripsDayNightScore:
        title: TripDayNightScore
        required:
          - data 
          - message
        type: object
        properties:
          data:
            type: array
            items:
             $ref: '#/components/schemas/TripDayNightScoreRow'
          message:
            type: string
        example:
            data:
              is_day_trip: true
              start_date_time: "2022-10-24"
              safe_score: "9.0"
            message: "Data successful"
    TripDayNightScoreRow:
        title: TripDayNightScoreRow
        required:
          - is_day_trip 
          - start_date_time
          - safe_score
        type: object
        properties:
          is_day_trip:
            type: boolean
          start_date_time:
            type: string
          safe_score:
            type: string
        example:
              is_day_trip: true
              start_date_time: "2022-10-24"
              safe_score: "9.0"
    DriverRoadTypeDistribution:
      title: DriverRoadTypeDistribution
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RoadTypeDistribution'
    RoadTypeDistribution:
       title: RoadTypeDistibution
       required:
         - data
       type: array
       items:
        $ref: '#/components/schemas/RoadTypeDistributionObject'
    RoadTypeDistributionObject:
        title: RoadTypeDistributionObject
        required:
          - contribution_value
          - road_factor_name
          - road_factor_type
        type: object
        properties:
          contribution_value:
            type: integer
            format: int32
          road_type_name:
            type: string
          road_type_value:
            type: string
        example:
           contribution_value: 26.72
           road_type_name: "00-30 kmph"
           road_type_type: "roadFactor1"
    VehicleDayNightScore:
        title: VehicleDayNightScore
        required:
          - data 
          - message
        type: object
        properties:
          data:
            type: array
            items:
             $ref: '#/components/schemas/VehicleDayNightScoreRow'
          message:
            type: string
        example:
            data:
              is_day_trip: true
              start_date_time: "2022-09-28"
              safe_score: "9.0"
            message: "Data successful"
    VehicleDayNightScoreRow:
        title: VehicleDayNightScoreRow
        required:
          - is_day_trip 
          - start_date_time
          - safe_score
        type: object
        properties:
          is_day_trip:
            type: boolean
          start_date_time:
            type: string
          safe_score:
            type: string
        example:
              is_day_trip: true
              start_date_time: "2022-09-28"
              safe_score: "9.0"
    Vehicles:
      title: Vehicles
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VehiclesList'
      example:
        data:
          count: 1
          rows:
          - id: 12869
            org_id: 12
            license_plate: "VP**"
            fuel_type: "D"
            make: "CITROEN"
            model: "Jumper"
            vin: "VF7YDCPFC12U59524"
            mileage: "0.000000"
            vehicle_category: {
              id: 12,
              name: "car"
            }
            vehicle_score: 0
            speed_score: 0
            idiling_score: 0
            breaking_score: 0
            acclaration_score: 0
            harsh_event: 0
            total_trips: 0
            total_distance: "0.00"
            parent_node: 49
            groups: []
    VehiclesList:
      title: VehiclesList
      required:
      - count
      - rows
      type: object
      properties:
        count:
          type: integer
          format: int32
        rows:
          type: array
          items:
            $ref: '#/components/schemas/VehicleRow'
          description: ''
      example:
        count: 1
        rows:
        - id: 12869
          org_id: 12
          license_plate: "VP**"
          fuel_type: "D"
          make: "CITROEN"
          model: "Jumper"
          vin: "VF7YDCPFC12U59524"
          mileage: "0.000000"
          vehicle_category: {
              id: 12,
              name: "car"
            }
          vehicle_score: 0
          speed_score: 0
          idiling_score: 0
          breaking_score: 0
          acclaration_score: 0
          harsh_event: 0
          total_trips: 0
          total_distance: "0.00"
          parent_node: 49
          groups: []
    VehicleRow:
      title: VehicleRow
      required:
      - id
      - org_id
      - license_plate
      - make
      - model
      - vin
      - mileage
      - vehicle_category
      - vehicle_score
      - idiling_score
      - breaking_score
      - acclaration_score
      - total_exception
      - harsh_event
      - total_trips
      - total_distance
      - parent_node
      - groups
      type: object
      properties:
        id:
          type: integer
          format: int32
        org_id:
          type: integer
          format: int32
        license_plate:
          type: string
        make:
          type: string
        model:
          type: string
        vin:
          type: string
        mileage:
          type: string
        vehicle_caegory:
          type: object
        vehicle_score:
          type: string
        idiling_score:
          type: string
        breaking_score:
          type: string
        acclaration_score:
          type: string
        harsh_event:
          type: integer
          format: int32
        total_trips:
          type: string
        total_distance:
          type: string
        parent_node:
          type: string
      example:
        id: 12869
        org_id: 12
        license_plate: "VP**"
        fuel_type: "D"
        make: "CITROEN"
        model: "Jumper"
        vin: "VF7YDCPFC12U59524"
        mileage: "0.000000"
        vehicle_category: {
              id: 12,
              name: "car"
            }
        vehicle_score: 0
        speed_score: 0
        idiling_score: 0
        breaking_score: 0
        acclaration_score: 0
        harsh_event: 0
        total_trips: 0
        total_distance: "0.00"
        parent_node: 49
        groups: [] 
    VehicleScore:
        title: VehicleScore
        required:
          - data 
        type: object
        properties:
          data:
            type: array
            items:
             $ref: '#/components/schemas/VehicleScoreRow'
          message:
            type: string
        example:
            data:
              date: "2022-09-27"
              safe_score: "9.0"
    VehicleScoreRow:
        title: VehicleScoreRow
        required:
          - date 
          - safe_score
        type: object
        properties:
          date:
            type: string
          safe_score:
            type: string
        example:
              date: "2022-09-27"
              safe_score: "7.6" 
    VehicleDetails:            
        title: VehicleDetails
        required:
          - data 
        type: object
        properties:
          data:
            $ref: '#/components/schemas/VehicleDetailsRow'
        example:
              data:
                id: 12664
                org_id: 12
                license_plate: "VP**"
                fuel_type: "D"
                make: "CITROEN"
                model: "Jumper"
                vin: "VF7YDCPFC12U59524"
                mileage: "0.000000"
                vehicle_score: 0
                speed_score: 0
                idiling_score: 0
                breaking_score: 0
                acclaration_score: 0
                harsh_event: 0
                total_trips: 0
                total_distance: "0.00"
                last_location:
                 {
                  id: "200000000000540038",
                  latitude: "51.898010",
                  longitude: "4.509875",
                  createdAt: "2022-10-22T20:00:56.384Z"
                 }
    VehicleDetailsRow:            
        title: VehicleDetailsRow
        required:
          - id
          - org_id
          - license_plate
          - make
          - model
          - vin
          - mileage 
          - last_location
          - vehicle_score
          - speed_score
          - idiling_score
          - breaking_score
          - cornering_score
          - acclaration_score
          - total_trips
          - total_distance
        type: object
        properties:
            id:
              type: integer
              format: int32
            org_id:
              type: integer
              format: int32
            license_plate:
              type: string
            make:
              type: string
            model:
              type: string
            vin:
              type: string
            mileage:
              type: string
            vehicle_caegory:
              type: object
            vehicle_score:
              type: string
            idiling_score:
              type: string
            breaking_score:
              type: string
            cornering_score:
              type: string
            speed_score:
              type: string
            acclaration_score:
              type: string
            harsh_event:
              type: integer
              format: int32
            total_trips:
              type: string
            total_distance:
              type: string
            last_location:
              type: object
        example:
              data:
                id: 12664
                org_id: 12
                license_plate: "VP**"
                fuel_type: "D"
                make: "CITROEN"
                model: "Jumper"
                vin: "VF7YDCPFC12U59524"
                mileage: "0.000000"
                vehicle_score: 0
                speed_score: 0
                idiling_score: 0
                breaking_score: 0
                acclaration_score: 0
                harsh_event: 0
                total_trips: 0
                total_distance: "0.00"
                last_location:
                 {
                  id: "200000000000540038",
                  latitude: "51.898010",
                  longitude: "4.509875",
                  createdAt: "2022-10-22T20:00:56.384Z"
                 }
    DriverScore:
        title: DriverScore
        required:
          - data 
        type: object
        properties:
          data:
            $ref: '#/components/schemas/DriverScoreData'
    DriverScoreData:
        title: DriverScoreData
        required:
          - safe_score
          - speed
          - idling
          - acceleration
          - breaking
          - cornering
        type: object
        properties:
          safe_score:
            type: string
          speed:
            type: string
          idling:
            type: string
          acceleration:
            type: string
          breaking:
            type: string
          cornering:
            type: string
        example:
          safe_score : "1001"
          speed: "1001"
          idling: "1001"
          acceleration: "1001"
          breaking: "1001"
          cornering: "1001"  
    DriverDetails:            
        title: DriverDetails
        required:
          - data 
        type: object
        properties:
          data:
            $ref: '#/components/schemas/DriverDetailsData' 
    DriverDetailsData:            
        title: DriverDetailsData
        required:
          - id
          - first_name
          - last_name
          - email
          - org_id
          - total_rides
          - total_vehicles
          - avg_speed
          - totalMinutes
          - driving_behaviour
          - total_distance
          - last_driver_vehicle 
        type: object
        properties:
          id:
           type: integer
           format: int32 
          first_name: 
           type: string
          last_name: 
           type: string 
          email: 
           type: string 
          org_id:
           type: integer
           format: int32 
          total_rides: 
           type: string 
          total_vehicles: 
           type: string 
          avg_speed: 
           type: string
          totalMinutes: 
           type: object
          driving_behaviour: 
           type: string
          total_distance: 
           type: string
          last_driver_vehicle: 
           type: string
        example:
          id: 32913
          first_name: "Dr**"
          last_name: null
          email: null
          org_id : 12
          total_rides: "3486"
          total_vehicles: "89"
          avg_speed: "40.7478198881239243"
          totalMinutes: {
            dayTripMinute: 24129,
            nightTripMinute: 2216
          } 
          driving_behaviour: "7.0"
          total_distance: 15526
          last_driver_vehicle: "V6**" 
    Drivers:
      title: Drivers
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DriverList'
    DriverList:
      title: DriverList
      required:
      - count
      - rows
      type: object
      properties:
        count:
          type: integer
          format: int32
        rows:
          type: array
          items:
            $ref: '#/components/schemas/DriverRow'
      example:
        count: 1
        rows:
        - id: 36639
          first_name: "driver-1"
          last_name: "gribb"
          email: "gribbyio@gmail.com"
          org_id: 235
          phone: "77876263527323"
          country_code: "31"
          profile_image: null
          status: 1
          goal_enabled: false
          harsh_event: 0
          driver_id: 36639
          total_trips: 0
          total_distance: "0.00"
          last_driver_vehicle: ""
          soreValue: {
              safe_score: 0,
              cornering: 0,
              speed: 0,
              idiling: 0,
              breaking: 0,
              acclaration: 0,
            } 
    DriverRow:            
        title: DriverRow 
        type: object
        properties:
          id:
           type: integer
           format: int32 
          first_name:
           type: string
          last_name:
           type: string
          email:
           type: string
          org_id:
           type: string
          phone:
           type: string
          country_code:
           type: string
          status:
           type: string
          goal_enabled:
           type: boolean
          driver_id:
           type: string
          total_trips:
           type: string
          last_driver_vehicle:
           type: string
          soreValue:
            type: object
            
    DriverReport:            
        title: DriverReport
        required:
          - data 
        type: object
        properties:
          data:
            $ref: '#/components/schemas/DriverReportData' 
    DriverReportData: 
        title: DriverReportData
        required:
          - total_distance
          - total_rides
          - total_drivers
          - safe_driving_score 
        type: object
        properties:
          total_distance:
            type: integer
            format: int32 
          total_rides:
           type: string
          total_drivers:
           type: string
          safe_driving_score:
           type: string 
        example:
          total_distance: 32359.25757429996
          total_rides: "1339" 
          total_drivers: "8"
          safe_driving_score: "5.4"
    VehicleCategoryByOrganisation:
        title: VehicleCategoryByOrganisation
        required:
          - data 
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/VehicleCategoryByOrganisationData'
    VehicleCategoryByOrganisationData:
        title: VehicleCategoryByOrganisationData
        required:
          - org_id
          - id
          - name 
        type: object
        properties:
          org_id:
            type: integer
            format: int32 
          id:
           type: integer
           format: int32 
          name:
           type: string
        example:
          org_id: 35
          id: 7 
          name: "Personenauto MPV"
    ClientDetails:
      title: ClientDetails
      required:
       - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClientDetailsData'
    ClientDetailsData:
      title: ClientDetailsData
      required:
      - count
      - data
      - message
      type: object
      properties:
        count:
          type: integer
          format: int32
        data:
          type: object
          $ref: '#/components/schemas/ClientDetailsRow'
      example:
          count: 1
          data: {
            id: 439,
            firstName: "di",
            lastName: "org",
            role: 2,
            email: "diorg@yopmail.com",
            profile_image: null,
            language: null,
            country_code: 31,
            phone: "1234567890",
            address: "amsterdam",
            is_client: true,
            org_point_of_contact: true,
            user_role: {
              role_name: "Fleet Manager",
              user_role_id: 2
            },
            org:
            {
              id: 307,
              name: "di org",
              org_category: "Company"
            }

          } 
          message: "Records has been listed successfully"
    ClientDetailsRow:            
        title: ClientDetailsRow 
        type: object
        properties:
          id:
           type: integer
           format: int32 
          first_name:
           type: string
          last_name:
           type: string
          email:
           type: string
          role:
           type: string
          phone:
           type: string
          country_code:
           type: string
          status:
           type: string
          is_client:
           type: boolean
          org_point_of_contact:
           type: boolean
          profile_image:
           type: string
          user_role:
            type: object
          org:
            type: object
    DrivingSummary:
      title: DrivingSummary
      required:
       - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DrivingSummaryDetails'
    DrivingSummaryDetails:
      title: DrivingSummaryDetails
      required:
       - total_trips
       - total_distance
       - exception
       - cornering_score
       - breaking_score
       - acceleration_score
       - idling_score
       - speed_score
       - safe_score
       - total_vehicles
      type: object
      properties:
        total_trips:
          type: string
        total_distance:
          type: string
        exception:
          type: string
        cornering_score:
          type: string
        breaking_score:
          type: string
        acceleration_score:
          type: string
        idling_score:
          type: string
        speed_score:
          type: string
        safe_score:
          type: string
        total_vehicles:
          type: string
      example:
        total_trips: "99"
        total_distance: "2367.85"
        total_vehicles: "1022"
        acceleration_score: "2.7"
        breaking_score: "6.1"
        exception: "1717"
        idling_score: "8.6"
        safe_score: "5.5"
        speed_score: "4.6"
        cornering_score: null
    TripsExceptionTypeDistribution:            
        title: TripsExceptionTypeDistribution
        required:
          - data 
        type: object
        properties:
          data:
            type: array
            items:
             $ref: '#/components/schemas/TripsExceptionTypeDistributionData' 
    TripsExceptionTypeDistributionData:            
        title: TripsExceptionTypeDistributionData
        type: object
        properties:
          score_type_count:
            type: string
          score_type:
            type: string
        example:
          score_type_count: "1703"
          score_type: "acceleration"
    Exceptions:
      title: Exceptions
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ExceptionList'
    ExceptionList:
      title: ExceptionList
      required:
      - count
      - rows
      type: object
      properties:
        count:
          type: integer
          format: int32
        rows:
          type: array
          items:
            $ref: '#/components/schemas/ExceptionRow'
      example:
        count: 1
        rows:
        - id: 30918958
          trip_id: "200000000000008453"
          start_time: "2022-10-23T16:37:16.000Z"
          end_time: "2022-10-23T16:41:48.000Z"
          distance: "7.370000"
          duration_seconds: "272.000000"
          vehicle_id: 12670
          score_type: "speed"
          start_waypoint_id: "200000000000541346"
          end_waypoint_id: "200000000000541355"
          violation_rate: 101
          limit: 100
          driver_id: 36601
          vehicle: {
              id: 12670,
              model: "TESLA MODEL Y",
              last_apk_date: "2026-04-15T00:00:00.000Z",
              fuel_type: "Elektriciteit",
              vin: "XP7YGCEL4NB003204" ,
              license_plate: "P-**",
            }
          driver_detail: {
              id: 36601,
              first_name: "dummy",
              last_name: "driver",
              email: "dummydriver@yopmail.com"
            } 
          points: [
            {
              id: "200000000000541346",
              latitude: "52.215831",
              longitude: "5.321036"
            },
            {
              id: "200000000000541355",
              latitude: "52.184242",
              longitude: "5.416038"
            }
        ]
    ExceptionRow:            
        title: ExceptionRow 
        type: object
        properties:
          id:
           type: integer
           format: int32 
          trip_id:
           type: string
          start_time:
           type: string
          end_time:
           type: string
          distance:
           type: string
          duration_seconds:
           type: string
          vehicle_id:
           type: string
          score_type:
           type: string
          start_waypoint_id:
           type: boolean
          end_waypoint_id:
           type: string
          violation_rate:
           type: string
          limit:
           type: string
          driver_id:
           type: string
          vehicle:
            type: object
          driver_detail:
            type: object
    OrganisationsV2:
        title: OrganisationsV2
        required:
        - data
        type: object
        properties:
          data:
            type: array
            items:
             $ref: '#/components/schemas/OrganisationsV2Data'
    OrganisationsV2Data:
        title: OrganisationsV2Data
        required:
        - id
        - name
        - parent_node
        - org_category
        - children
        type: object
        properties:
          id:
           type: integer
           format: int32 
          name:
           type: string
          parent_node:
           type: string
          org_category:
           type: string
          childern:
           type: array       
           items:
             $ref: '#/components/schemas/OrganisationsV2Data'
        example:
           id: 299
           name: "check app access"
           parent_node : null
           org_category: "Company"
           children: []
    AddUser:
        title: AddUser
        required:
        - first_name
        - last_name
        - email
        - contact
        - country_code
        - portal
        - org_id
        - groupsName
        - groups
        - user_type
        - language
        type: object
        properties:
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
          contact:
            type: string
          country_code:
            type: string
          portal:
            type: string
          org_id:
            type: integer
            format: int32
          groupsName:
            type: string
          groups:
            type: string
          user_type:
            type: string
          language:
            type: string
        example:
           first_name: "Ryan"
           last_name: "Gosling"
           email: "ryangos@yopmail.com"
           contact: "1234567896"
           country_code: "31"
           groups: ""
           groupsName: ""
           org_id: 307
           portal: "GRIBB"
           user_type: "User"
           language: "en"
    AddUserResponse:
        title: AddUserResponse
        required:
        - data
        - message
        type: object
        properties:
          data:
            type: object
          message:
            type: string
        example:
          data: {}
          message: "User has been created successfully"
    Login:
        title: Login
        required:
        - email
        - password
        type: object
        properties:
          email:
            type: string
          password:
            type: string
        example:
          email: "admin-merlin@yopmail.com"
          password: "HelloMobility@123"
    LoginResponse:
        title: LoginResponse
        required:
        - data
        type: object
        properties:
          data:
           type: object
           $ref: '#/components/schemas/LoginResponseObject'
    LoginResponseObject:
        title: LoginResponseObject
        required:
        - id
        - email
        - status
        - first_name
        - last_name
        - token
        - phone
        - profile_image
        - country_code
        - role
        - address
        - color_code
        - groupDetails
        - userOrgData
        - is_client
        - org_category
        - role_id
        type: object
        properties:
          id:
           type: integer
           format: int32
          email:
           type: string
          status:
            type: integer
            format: int32
          first_name:
            type: string
          last_name:
            type: string
          token:
            type: string
          phone:
            type: string
          profile_image:
            type: string
          country_code:
            type: string
          role:
            type: string
          address:
            type: string
          color_code:
            type: string
          groupDetails:
            type: string
          userOrgData:
            type: object
          is_client:
            type: boolean
          org_category:
            type: string
          role_id:
            type: integer
            format: int32
    AddClient:
        title: AddClient
        required:
        - first_anme
        - last_name
        - email
        - address
        - country_code
        - phone
        - organisation_name
        - parent_node
        - userRoleId
        - resource_list
        - status
        - is_group
        - portal
        - org_category
        - appAccesstype
        type: object
        properties:
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
          address:
            type: string
          country_code:
            type: string
          phone:
            type: string
          organisation_name:
            type: string
          parent_node:
            type: string
          userRoleId:
            type: string
          org_category:
            type: string
          appAccesstype:
            type: object
          portal:
            type: string
          status:
            type: string
          is_group:
            type: boolean
          resource_list:
            type: string
        example:
          first_name: "Gribb"
          status: 1
          userRoleId: "1"
          portal: "Gribb"
          phone: "1234567892"
          parent_node: null
          organisation_name: "GribbTech Demo"
          org_category: "GribbTech Demo"
          lastName: "Tech"
          is_group: false
          firstName: "Gribb"
          country_code: "31"
          email: "gribbbb@yopmail.com"
          address: "holland"
          appAccesstype: {
            1: true,
            2: false,
            3: false,
            4: false
          }
          resource_list: [
            { resource_name: "Dashboard" , 
              resource_id: 2
            }
          ]
    AddClientResponse:
        title: AddClientResponse
        required:
        - data
        - message
        type: object
        properties:
          data:
           type: object
           $ref: '#/components/schemas/AddClientResponseObject'
          message:
           type: string
    AddClientResponseObject:
        title: AddClientResponseObject
        type: object
        properties:
          OrgResInfo:
           type: object
          UserRolePriviledgesInfo:
           type: object
          orgData:
           type: object
          orgUserInfo:
           type: object
          userInfo:
           type: object
          orgTspData:
           type: object
          TspConfigInfo:
           type: object
    Groups:
        title: Groups
        required:
        - data
        - message
        type: object
        properties:
          data:
           type: object
           $ref: '#/components/schemas/GroupsData'
          message:
           type: string
        example:
          data:
            groups:
              id: 166
              name: "Org-Demo"
              org_category: "Company"
              children: []
            user_groups: []
          message: "Details has been fetch successfully"
    GroupsData:
        title: GroupsData
        required:
        - groups
        - user_groups
        type: object
        properties:
          groups:
           type: object
           $ref: '#/components/schemas/GroupsDataObject'
          user_groups:
           type: array
           items:
            type: object
    GroupsDataObject:
        title: GroupsDataObject
        type: object
        properties:
          id:
           type: string
          name:
           type: string
          org_category:
            type: string
          children:
            type: array
            items:
             type: object
    GroupsInfo:
        title: GroupsInfo
        required:
        - data
        - message
        type: object
        properties:
          data:
           type: object
           $ref: '#/components/schemas/GroupsInfoData'
          message:
           type: string
    GroupsInfoData:
        title: GroupsInfoData
        required:
        - createdAt
        - id
        - name
        - org_category
        - total_drivers
        - total_users
        - total_vehicles
        type: object
        properties:
          id:
           type: string
          name:
           type: string
          org_category:
           type: string
          total_drivers:
           type: integer
           format: int32
          total_users:
           type: integer
           format: int32
          total_vehicles:
           type: integer
           format: int32
        example:
          id: 197
          name: "Group-172"
          org_category: "Group"
          total_drivers: 8
          total_users: 0
          total_vehicles: 8  
    GroupsVehicleList:
        title: GroupsVehicleList
        required:
        - assigned_groups
        - count
        - data
        type: object
        properties:
          assigned_groups:
           type: object
          data:
           type: array
           items:
            $ref: '#/components/schemas/GroupsVehicleListData'
          count:
           type: integer
           format: int32
        example:
          assigned_groups:
            9598: [204] 
          count: 1
          data: 
            id: 9598
            org_id: 35
            license_plate: "XF**"
            fuel_type: "Elektriciteit"
            make: null
            model: "TESLA MODEL S"
            vin: ""
            mileage: "0.000000"
            vehicle_score: "5.01"
            speed_score: "3.20"
            idiling_score: "9.39"
            breaking_score: "4.62"
            acclaration_score: "5.69"
            harsh_event: 6088
            total_trips: 211
            total_distance: "6610.58"
    GroupsVehicleListData:
        title: GroupsVehicleListData
        required:
        - id
        - org_id
        - license_plate
        - fuel_type
        - make
        - model
        - vin
        - mileage
        - vehicle_score
        - speed_score
        - idiling_score
        - breaking_score
        - acclaration_score
        - harsh_event
        - total_trips
        - total_distance
        type: object
        properties:          
          id:
           type: integer
           format: int32
          org_id:
           type: integer
           format: int32 
          license_plate:
           type: string
          fuel_type:
           type: string
          make:
           type: string
          model:
           type: string
          vin:
           type: string
          mileage:
           type: string
          vehicle_score:
           type: string
          speed_score:
           type: string
          idiling_score:
           type: string
          breaking_score:
           type: string
          acclaration_score:
           type: string
          harsh_event:
           type: string
          total_trips:
           type: string
          total_distance:
           type: string
    GroupsUserList:
        title: GroupsUserList
        required:
        - assigned_groups
        - count
        - data
        type: object
        properties:
          assigned_groups:
           type: object
          data:
           type: array
           items:
            $ref: '#/components/schemas/GroupsUserList'
          count:
           type: integer
           format: int32
        example:
          assigned_groups:
            36584: [197] 
          count: 1
          data: 
            id: 36584
            org_id: 35
            first_name: "Dr**"
            last_name: "Dr**"
            email: "driver8@hellomobility.nl"
            phone: null
            country_code: null
            profile_image: null
            status: 1
            goal_enabled: false
            speeding_goal: null
            idiling_goal: null
            traffic_goal: null
            extra_wear_goal: null
            safe_acceleration_goal: null
            harsh_event: 0
            toatl_trips: 0
            driver_id: 36584
            total_distance: "0.00"
            soreValue: {
               safe_score: 0,
               cornering: 0,
               speed: 0,
               idiling: 0,
               breaking: 0,
               acclaration: 0
            }
    GroupsUserListData:
        title: GroupsUserListData
        required:
        - id
        - org_id
        - license_plate
        - fuel_type
        - make
        - model
        - vin
        - mileage
        - vehicle_score
        - speed_score
        - idiling_score
        - breaking_score
        - acclaration_score
        - harsh_event
        - total_trips
        - total_distance
        type: object
        properties:          
          id:
           type: integer
           format: int32
          org_id:
           type: integer
           format: int32 
          license_plate:
           type: string
          fuel_type:
           type: string
          make:
           type: string
          model:
           type: string
          vin:
           type: string
          mileage:
           type: string
          vehicle_score:
           type: string
          speed_score:
           type: string
          idiling_score:
           type: string
          breaking_score:
           type: string
          acclaration_score:
           type: string
          harsh_event:
           type: string
          total_trips:
           type: string
          total_distance:
           type: string
    CompanyUsers:
        title: CompanyUsers
        required:
        - data
        - message
        type: object
        properties:
          data:
           type: object
           $ref: '#/components/schemas/CompanyUsersList'
          message:
           type: string
    CompanyUsersList:
        title: CompanyUsersList
        required:
        - company_users
        - group_users
        type: object
        properties:
          company_users:
           type: array
           items:
            $ref: '#/components/schemas/CompanyUsersListData'
          group_users:
           type: array
           items:
            type: object
    CompanyUsersListData:
        title: CompanyUsersListData
        type: object
        properties:
          address:
           type: string
          country_code:
           type: string
          email:
           type: string
          first_name:
           type: string
          last_name:
           type: string
          id:
           type: integer
           format: int32 
          phone:
           type: string
          role:
           type: integer
           format: int32 
          status:
           type: integer
           format: int32 
           
    AssignVehicleRequestBody:
        title: AssignVehicleRequestBody
        required:
        - org_id
        - vehicles
        type: object
        properties:
          org_id:
           type: integer
           format: int32
          vehicles:
           type: array
           items:
            type: integer
            format: int32
        example:
          org_id: 202
          vehicles: [12669,12670]
    AssignVehicle:
        title: AssignVehicle
        required:
        - data
        - message
        type: object
        properties:
          data:
           type: object
          messages:
           type: string
        example:
          data: {}
          message: "Vehicles has been added to group successfully"
    AssignUsersRequestBody:
        title: AssignUsersRequestBody
        required:
        - org_id
        - user_type
        - users
        type: object
        properties:
          org_id:
           type: integer
           format: int32
          user_type:
           type: integer
           format: int32
          users:
           type: array
           items:
            type: integer
            format: int32
        example:
          org_id: 202
          user_type: 1
          users: [36584,36593,36516]
    AssignUsers:
        title: AssignUsers
        required:
        - data
        - message
        type: object
        properties:
          data:
           type: object
          messages:
           type: string
        example:
          data: {}
          message: "Drivers has been added to group successfully"
    VehicleTopListing:
        title: VehicleTopListing
        required:
        - data
        type: object
        properties:
          data:
           type: object
           $ref: '#/components/schemas/VehicleTopListingData'
    VehicleTopListingData:
        title: VehicleTopListingData
        required:
        - bestSCore
        - mostTravelled
        - probablyCrashed
        - worstScore
        type: object
        properties:
          bestScore:
            type: object
            $ref: '#/components/schemas/BestScore'
          mostTravelled:
            type: object
            $ref: '#/components/schemas/mostTravelled'
          probablyCrashed:
            type: object
            $ref: '#/components/schemas/probablyCrashed'
          worstScore:
            type: object
            $ref: '#/components/schemas/worstScore'
    BestScore:
        title: BestScore
        type: object
        properties:
         safe_score:
           type: string
         license_plate:
           type: string
         id:
          type: string
        example:
         - safe_score: 7.1700000000000000
           id: 12615
           license_plate: "VG**"
         - safe_score: 6.5700000000000000
           id: 12603
           license_plate: "V-108-FV"
         - safe_score: 6.5700000000000000
           id: 12619
           license_plate: "VH**"
         - safe_score: 6.1900000000000000
           id: 12622
           license_plate: "VJ**"
    mostTravelled:
        title: mostTravelled
        type: object
        properties:
         total_distance:
           type: string
         license_plate:
           type: string
         id:
          type: string
        example:
         - total_distance: 314.36
           id: 12603
           license_plate: "V-108-FV"
         - total_distance: 293
           id: 12622
           license_plate: "VJ**"
         - total_distance: 126.89
           id: 12606
           license_plate: "V-184-RV"
         - total_distance: 252
           id: 12618
           license_plate: "VH**"
    probablyCrashed:
        title: probablyCrashed
        type: object
        properties:
         safe_score:
           type: string
         license_plate:
           type: string
         id:
          type: string
        example:
         - safe_score: -29.4444
           id: 472
           license_plate: "H6**"
         - safe_score: -26.6666
           id: 424
           license_plate: "V6**"
         - safe_score: -27.7777
           id: 415
           license_plate: "VH**"
         - safe_score: -26.6666
           id: 464
           license_plate: "G1**"
    worstScore:
        title: worstScore
        type: object
        properties:
         safe_score:
           type: string
         license_plate:
           type: string
         id:
          type: string
        example:
         - safe_score: -2.4200000000000000
           id: 12617
           license_plate: "VF**"
         - safe_score: 4.2100000000000000
           id: 12620
           license_plate: "V-**"
         - safe_score: 4.4900000000000000
           id: 12612
           license_plate: "VH**"
         - safe_score: 4.7000000000000000
           id: 12623
           license_plate: "VGT-18-J"
    CheckGroupAccess:
        title: CheckGroupAccess
        required:
        - data
        - message
        type: object
        properties:
          data:
           type: array
           items:
            $ref: "#/components/schemas/CheckGroupAccessData"
          messages:
           type: string
        example:
          data:
           - org_id: 9
             has_group_access: false
           - org_id: 10
             has_group_access: false
          message: "Drivers has been added to group successfully"
    CheckGroupAccessData:
        title: CheckGroupAccessData
        type: object
        properties:
          org_id:
           type: integer
           format: int32
          has_group_access:
           type: boolean           
    GroupVehicleUnassignRequestBody:
        title: GroupVehicleUnassignRquestBody
        required:
        - vehicle_id
        - org_id
        type: object
        properties:
          org_id:
           type: integer
           format: int32
          vehicle_id:
           type: integer
           format: int32
        example:
          org_id: 197
          vehicle_id: 12670
    GroupVehicleUnassign:
        title: GroupVehicleUnassign
        required:
        - data
        - message
        type: object
        properties:
          data:
           type: object
          message:
           type: object
        example:
          data : {}
          message: "Successfully unassigned vehicle from the group."
    GroupVehicleExportRequestBody:
        title: GroupVehicleExportRequestBody
        required:
        - sNo
        - total_km
        - total_trips
        - vehicle_name
        - contact_number
        - email
        - first_name
        - last_name
        - license_plate
        type: object
        properties:
          sNo:
           type: string
          total_km:
           type: string
          total_trips:
           type: string
          vehicle_name:
           type: string
          license_plate:
           type: string
          first_name:
           type: string
          last_name:
           type: string
          contact_number:
           type: string
          email:
           type: string
        example:
          sNo: "S.No"
          total_km: "Total Kms"
          total_trips: "Total trips"
          vehicle_name: "Vehicle"
          license_plate: "License plate"
          contact_number: "Contact Number"
          email: "Email"
          first_name: "First Name"
          last_name: "Last Name"
    GroupVehicleExport:
        title: GroupVehicleExport
        required:
        - data
        - message
        type: object
        properties:
          data:
           type: boolean
          message:
           type: string
        example:
          data : true
          message: "We will send the export file to your registered email address in 5-10 minutes."  
    vehicleGroupList:
        title: vehicleGroupList
        required:
        - data
        - message
        type: object
        properties:
          data:
           type: object
           $ref: "#/components/schemas/vehicleGroupListData"
          message:
           type: string
        example:
          data :
           count: 1
           rows:
            id: 204
            is_active: true
            name: "group 172.1"
            org_category: "Group"
            org_id: null
          message: "Group list has been fetched successfully" 
    vehicleGroupListData:
        title: vehicleGroupListData
        type: object
        properties:
          id:
           type: string
          is_active:
           type: boolean
          name:
           type: boolean
          org_category:
           type: string
          org_id:
           type: string
          message:
           type: string
    TripExportRequestBody:
        title: TripExportRequestBody        
        type: object
        properties:
         sNo:
          type: string
         acceleration_score:
          type: string
         breaking_score:
          type: string
         cornering_score:
          type: string
         day_time_driving:
          type: string
         distance:
          type: string
         driver_name:
          type: string
         idiling_score:
          type: string
         license_plate:
          type: string
         night_time_driving:
          type: string
         safe_score:
          type: string
         speed_score:
          type: string
         start_date_time:
          type: string
         start_location_address:
          type: string
         stop_date_time:
          type: string
         stop_location_address:
          type: string
         total_exception:
          type: string
         total_time:
          type: string
        example:
          sNo: "S.No"
          acceleration_score: "Safe acceleration score"   
          breaking_score: "Traffic insight deceleration" 
          cornering_score: "No extra wear in corners"
          day_time_driving: "Day time driving"
          distance: "Total distance"
          driver_name: "Driver Name"
          idling_score: "Eco Score"
          license_plate: "License plate"
          night_time_driving: "Night time driving"
          safe_score: "Safety Score"
          speed_score: "The right speed"
          start_date_time: "Started at"
          start_location_address: "To"
          stop_date_time: "Ended at"
          stop_location_address: "From"
          total_exception: "Exceptions"
          total_time: "Total time"
    drivingAnalyticsGraph:
        title: drivingAnalyticsGraph
        required:
        - data
        type: object
        properties:
          data:
           type: object
           $ref: '#/components/schemas/drivingAnalyticsGraphData'
    drivingAnalyticsGraphData:
        title: drivingAnalyticsGraphData
        required:
        - data
        type: object
        properties:
          acceleration_score:
           type: string
          breaking_score:
           type: string
          date:
           type: string
          idling_score:
           type: string
          safe_score:
           type: string
          speed_score:
           type: string
        example:
           acceleration_score: '2.7'
           breaking_score: '6.1'
           date: '2022-03-01'
           idling_score: '8.6'
           safe_score: '5.5'
           speed_score: '4.6' 
    DriverClientDetails:
      title: DriverClientDetails
      required:
       - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DriverClientDetailsData'
    DriverClientDetailsData:
      title: DriverClientDetailsData
      required:
       - count
       - rows
      type: object
      properties:
        count:
          type: integer
          format: int32 
        rows:
          type: array
          items:
           $ref: '#/components/schemas/DriverClientDetailsDataRow'
      example:
        count: 1
        rows:
          id: 36584
          tsp_driver_id: "GEOTAB_b27"
          address: null
          country_code: null
          createdAt: "2022-09-03T19:31:11.050Z"
          driver_type: 1
          driving_behaviour_score: null
          email: "driver8@hellomobility.nl"
          extra_wear_goal: null
          first_name: "Dr***"
          goal_enabled: false
          idiling_goal: null
          kms: null
          org_id : 35
          phone: null
          profile_image: null
          ranking: null
          safe_acceleration_goal: null
          speeding_goal: null
          status: 1
          traffic_goal: null
          updatedAt: "2022-09-03T19:31:11.050Z"
          org:
           id: 172
           name: "Demo-35"
           org_category: "Company"
          groups:
           id: 105
           name: Group 3
           org_category: Group
    DriverClientDetailsDataRow:
      title: DriverClientDetailsDataRow
      type: object
      properties:
        id:
          type: integer
          format: int32 
        tsp_driver_id:
          type: string
        address:
          type: string
        country_code:
          type: string
        createdAt:
          type: string
        driver_type:
          type: integer
          format: int32 
        driving_behaviour_score:
          type: string
        email:
          type: string
        extra_wear_goal:
          type: string
        first_name:
          type: string
        goal_enabled:
          type: boolean
        idiling_goal:
          type: string
        kms:
          type: string
        org_id:
          type: integer
          format: int32 
        phone:
          type: string
        profile_image:
          type: string
        ranking:
          type: string
        safe_acceleration_goal:
          type: string
        status:
          type: integer
          format: int32 
        traffic_goal:
          type: string
        updatedAt:
          type: string
        org:
          type: object
        groups:
          type: object
        
        
    ClientReport:
      title: ClientReport
      required:
       - data
      type: object
      properties:
        data:
          type: array
          items:
           $ref: '#/components/schemas/ClientReportData'
    ClientReportData:
      title: ClientReportData
      required:
       - id
       - org_id
       - org_name
       - report_date
       - start_date
       - total_distance
       - total_drivers
       - total_trips
       - total_vehicles
       - TSP
       - Reseller
      type: object
      properties:
       id:
        type: integer
        format: int32
       org_id:
        type: integer
        format: int32
       org_name:
        type: string
       report_date:
        type: string
       start_date:
        type: string
       total_distance:
        type: integer
        format: int32
       total_drivers:
        type: integer
        format: int32
       total_trips:
        type: integer
        format: int32
       total_vehicles:
        type: integer
        format: int32
       TSP:
        type: string
       Reseller:
         type: string
      example:
       id: 2076
       org_id: 69
       org_name: "Demo-69"
       report_date: "2022-12-01"
       start_date: 1001
       total_distance: "14491.76"
       total_drivers: 0
       total_trips: 3638
       total_vehicles: 12
       TSP: "GEOTAB"
       Reseller: null
    ClientList:
      title: ClientList
      required:
       - data
       - message
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/ClientListData'
        message:
          type: string
          example: "Records has been listed successfully"
    ClientListData:
      title: ClientListData
      required:
       - count
       - rows
      properties:
        count:
          type: integer
          format: int32 
        rows:
          type: array
          items:
           $ref: '#/components/schemas/ClientListDataRow'
      example:
        count: 1
        rows:
         id: 119
         name: "Demo-119"
         org_id: null
         is_active: true
         org_category: "Company"
         is_archived: false
         archived_date: null
         parent_node: 70
         is_group: false
         user_organisation:
          id: 391
          firstName: "DH**"
          lastName: "Ge**"
          role: 2
          email: "dhlgeotab@yopmail.com"
          profile_image: null
          language: "nl"
          country_code: "31"
          phone: "61"
          status: 1
          address: "Ne**"
          is_client: true
          org_point_of_contact: false
          failed_login_count: 0
          failed_login_at: null
        organisation_user_role:
          role_name: "Fleet Manager"
          user_role_id: 2
        total_vehicles: 0
        users: 0
        mobile_users: 1
        user_role_priviledges:
          - resource_name: "Dashboard"
            resource_id: 2
            access_type: 1001
          - resource_name: "Vehicle"
            resource_id: 3
            access_type: 1001
          - resource_name: "Trips"
            resource_id: 4
            access_type: 1001
    ClientListDataRow:
      title: ClientListDataRow
      properties:
         id: 
          type: integer
          format: int32
         name:
          type: string
         org_id:
          type: integer
          format: int32
         is_active:
          type: boolean
         org_category:
          type: string
         is_archived:
          type: boolean
         archived_date:
          type: string
         parent_node:
          type: integer
          format: int32
         is_group:
          type: boolean
         user_organisation:
          type: object
         organisation_user_role:
          type: object
         total_vehicles:
          type: integer
          format: int32
         users:
          type: integer
          format: int32
         mobile_users:
          type: integer
          format: int32
         user_role_priviledges:
          type: object
    CheckInOut:
      title: CheckInOut
      required:
       - data
       - count
       - configurations
      type: object
      properties:
        data:
          type: array
          items:
           $ref: '#/components/schemas/CheckInOutData'
        count:
          type: object
          example:
           total: 96
           checked_in: 2
           checked_out: 94
        configurations:
          type: object
          example: 
           status:
            0 : "CHECKED_IN"
            1 : "CHECKED_OUT"
           action_by:
            0: "DRIVER"
            1: "SUPER_ADMIN"
            2: "FLEET_MANAGER"
            3: "USER"
            4: "ADMIN"
            5: "SYSTEM"
    CheckInOutData:
      title: CheckInOutData
      required:
       - id
       - org_id
       - driver_id
       - vehicle_id
       - license_plate_image
       - status
       - check_in_date_time
       - device_check_in_date_time
       - check_out_date_time
       - device_check_out_date_time
       - start_milage
       - end_milage
       - total_distance
       - total_duration
       - action_by
       - vehicle
       - driver
      type: object
      properties:
       id:
        type: string
       org_id:
        type: integer
        format: int32
       driver_id:
        type: integer
        format: int32
       vehicle_id:
        type: integer
        format: int32
       license_plate_image:
        type: string
       status:
        type: integer
        format: int32
       check_in_date_time:
        type: string
       device_check_in_date_time:
        type: string
       check_out_date_time:
        type: string
       device_check_out_date_time:
        type: string
       start_milage:
        type: string
       end_milage:
        type: string
       total_distance:
        type: integer
        format: int32
       total_duration:
        type: string
       vehicle:
        type: object
       driver:
        type: object

      example:
       id: "104"
       org_id: 172
       driver_id: 36591
       vehicle_id: 12664
       license_plate_image: null
       status: 1
       check_in_date_time : "2023-01-27T18:27:25.420Z"
       device_check_in_date_time : "2023-01-27T18:27:29.917Z"
       check_out_date_time : "2023-02-01T12:46:57.805Z"
       device_check_out_date_time: "2023-02-01T12:48:05.351Z"
       start_milage: null
       end_milage: null
       action_by: 0
       vehicle: 
        id: 12664
        license_plate: "LO**"
       driver:
        id: 36591
        first_name: "De***"
        last_name: "De***"
        email: "demo@gribb.tech"
        country_code: null
        phone: null
        profile_image: null 
    GroupCreateRequestBody:
      title: GroupCreateRequestBody
      required:
      - parent_node
      - name
      type: object
      properties:
         parent_node: 
          type: integer
          format: int32
         name:
          type: string 
      example:
        parent_node: 75
        name: "Dummy-2" 
    GroupCreate:
      title: GroupCreate
      required:
      - data
      - messsage
      type: object
      properties:
         data: 
          type: object
          $ref: '#/components/schemas/GroupCreateData'
         message:
          type: string 
          example: Group has been created successfully 
    GroupCreateData:
      title: GroupCreateData
      required:
      - id
      - name
      - org_category
      - parent_node
      type: object
      properties:
         id: 
          type: integer
          format: int32
         name:
          type: string 
         org_category:
          type: string
         parent_node:
           type: integer
           format: int32
      example:
        id: 309
        name: "Dummy-2"
        org_category: "Group"
        parent_node: 75
    DeleteGroupRequestBody:
      title: DeleteGroupRequestBody
      required:
      - org_id
      type: object
      properties:
         org_id: 
          type: integer
          format: int32
      example:
        org_id: 309
    DeleteGroup:
      title: DeleteGroup
      required:
      - data
      - message
      type: object
      properties:
         data: 
          type: object
         message:
          type: string
          example: "Group has been deleted successfully"
    CompanyDriver:
      title: CompanyDriver
      required:
      - data
      - message
      properties:
         data: 
          type: object
          $ref: '#/components/schemas/CompanyDriverData'
         message:
          type: string 
          example: Driver list has been fetched successfully
    CompanyDriverData:
      title: CompanyDriverData
      required:
      - company_drivers
      - group_drivers
      properties:
         company_drivers: 
          type: array
          items:
           $ref: '#/components/schemas/CompanyDriverObject'
         group_drivers:
          type: array
          items:
           type: integer
          example: 
          - 36585
          - 36593
          - 36577
          - 36578
    CompanyDriverObject:
      title: CompanyDriverObject
      required:
      - id
      - last_name
      - phone
      - profile_image
      - first_name
      - email
      - country_code
      properties:
         id:
          type: integer
          format: int32
         first_name:
          type: string
         last_name:
          type: string
         phone:
          type: string
         profile_image:
          type: string
         email:
          type: string
         country_code:
          type: string
    GroupUserUnassignRequestBody:
      title: GroupUserUnassignRequestBody
      required:
      - org_id
      - user_id
      - user_type
      properties:
         org_id:
          type: integer
          format: int32
         user_id:
          type: integer
          format: int32
         user_type:
          type: integer
          format: int32
      example:
        org_id: 197
        user_id: 382
        user_type: 0
    GroupUserUnassign:
      title: GroupUserUnassign
      required:
      - data
      - message
      properties:
         data:
          type: object
         message:
          type: string
          example: "Successfully unassigned user to group."
    UpdateRequestBody:
      title: UpdateRequestBody
      required:
      - contact
      - country_code
      - email
      - first_name
      - groups
      - groupsName
      - last_name
      - org_id
      - role
      - status
      - user_id
      properties:
         user_id:
          type: integer
          format: int32
         status:
           type: string
         role:
          type: integer
          format: int32
         org_id:
          type: integer
          format: int32
         last_name:
          type: string
         groupsName:
          type: string
         first_name:
          type: string
         email:
          type: string
         country_code:
          type: string
         contact:
          type: string
         groups:
          type: array
          items:
           type: integer
      example:
          user_id: 366
          status: "1"
          role: 2
          org_id: 172
          last_name: 'Ge**'
          groupsName: "Group-172,group 172.1,group 172.1.1,group 172.2,group 172.2,group 172.2.1"
          groups: [194, 204, 209]
          first_name: "Pr***"
          email: "prodrive-geotab@yopmail.com"
          country_code: "31"
          contact: "6134576829"
    UpdateClient:
      title: UpdateClient
      required:
      - data
      - message
      properties:
         data:
          type: object
         message:
          type: string
          example: "User has been updated successfully"
    TripsEventTypeDistribution:
      title: TripsEventTypeDistribution
      required:
      - data
      properties:
         data:
          type: object
          $ref: '#/components/schemas/TripsEventTypeDistributionData'
    TripsEventTypeDistributionData:
      title: TripsEventTypeDistributionData
      required:
      - acceleration_distribution
      - breaking_distribution
      - cornering_distribution
      - speed_distribution
      properties:
         acceleration_distribution:
          type: array
          $ref: '#/components/schemas/TripsEventTypeDistributionDataObject'
         breaking_distribution:
          type: array
          $ref: '#/components/schemas/TripsEventTypeDistributionDataObject'
         cornering_distribution:
          type: array
          $ref: '#/components/schemas/TripsEventTypeDistributionDataObject'
         speed_distribution:
          type: array
          $ref: '#/components/schemas/TripsEventTypeDistributionDataObject'
    TripsEventTypeDistributionDataObject:
      title: TripsEventTypeDistributionDataObjectObject
      required:
      - contribution_value
      - road_factor_name
      - road_factor_type
      properties:
         contribution_value:
          type: integer
         road_factor_name:
          type: string
         road_factor_type:
          type: string
      example:
        - contribution_value: 0
          road_factor_name: "00-30 kmph"
          road_factor_type: "roadFactor1"
        - contribution_value: 0
          road_factor_name: "31-50 kmph"
          road_factor_type: "roadFactor2"
        - contribution_value: 0
          road_factor_name: "51-70 kmph"
          road_factor_type: "roadFactor3"
        - contribution_value: 0
          road_factor_name: "71-80 kmph"
          road_factor_type: "roadFactor4"
        - contribution_value: 0
          road_factor_name: "81-100+ kmph"
          road_factor_type: "roadFactor5"
    TripsRoadTypeDistribution:
      title: TripsRoadTypeDistribution
      required:
      - data
      properties:
         data:
          type: array
          $ref: '#/components/schemas/TripsRoadTypeDistributionArray'
    
    TripsRoadTypeDistributionArray:
      title: TripsRoadTypeDistributionArray
      type: object
      properties:
         contribution_value:
          type: integer
         road_factor_name:
          type: string
         road_factor_type:
          type: string
      example:
        - contribution_value: 13.71
          road_factor_name: "00-30 kmph"
          road_factor_type: "roadFactor1"
        - contribution_value: 31.5
          road_factor_name: "31-50 kmph"
          road_factor_type: "roadFactor2"
        - contribution_value: 6.66
          road_factor_name: "51-70 kmph"
          road_factor_type: "roadFactor3"
        - contribution_value: 13.02
          road_factor_name: "71-80 kmph"
          road_factor_type: "roadFactor4"
        - contribution_value: 35.11
          road_factor_name: "81-100+ kmph"
          road_factor_type: "roadFactor5"
    TripDetails:
      title: TripDetails
      required:
      - data
      type: object
      properties:
         data:
          type: object
          $ref: '#/components/schemas/TripsDetailsData'
    TripsDetailsData:
      title: TripDetailsData
      type: object
      properties:
         acceleration_score:
          type: string
         breaking_score:
          type: string
         cornering_score:
          type: string
         distance:
          type: integer
         driver_details:
          type: object
         driver_id:
          type: integer
         finish_latitude:
          type: string
         finish_longitude:
          type: string
         id:
          type: string
         idling_score:
          type: string
         license_plate:
          type: string
         provider:
          type: string
         safe_score:
          type: string
         speed_score:
          type: string
         start_date_time:
          type: string
         start_latitude:
          type: string
         start_longitude:
          type: string
         stop_date_time:
          type: string
         stop_location_address:
          type: string
         tripDayNightCount:
          type: object
         trip_start_time:
          type: string
         trip_stop_time:
          type: string
         vehicle_id:
          type: integer
    TripExceptionCount:
      title: TripExceptionCount
      required:
      - data
      type: object
      properties:
        data:
         type: array
         items:
          type: object
    TripExceptionCountRequestBody:
      title: TripExceptionCountRequestBody
      required:
      - tripId
      type: object
      properties:
        tripId:
          type: string
          example: "110000000000255208"
    ShiftScore:
      title: ShiftScore
      required:
      - data
      type: object
      properties:
        data:
         type: object
         $ref: '#/components/schemas/ShiftScoreData'

    ShiftScoreData:
      title: ShiftScoreData
      required:
      - driver_check_in_out_id
      - safe_score
      - speed_score
      - acceleration_score
      - breaking_score
      - cornering_score
      - idling_score
      - total_exception
      - total_trips
      type: object
      properties:
       driver_check_in_out_id:
        type: integer
       safe_score:
        type: string
       speed_score:
        type: string
       acceleration_score:
        type: string
       breaking_score:
        type: string
       cornering_score:
        type: string
       idling_score:
        type: string
       total_exception:
        type: integer
       total_trips:
        type: integer
      
      example:
        driver_check_in_out_id: 1133
        safe_score: "6.50"
        speed_score: "3.55"
        acceleration_score: "7.00"
        breaking_score: "6.50"
        cornering_score: "0.00"
        idling_score: "10.00"
        total_exception: 38
        total_trips: 8
    CheckDriverAccess:
      title: CheckDriverAccess
      required:
      - data
      type: object
      properties:
        data:
         type: object
    CheckDriverAccessData:
      title: CheckDriverAccessData
      required:
      - driver_identification
      type: object
      properties:
        driver_identification:
         type: object
         $ref: '#/components/schemas/CheckDriverAccessObject'
    CheckDriverAccessObject:
      title: CheckDriverAccessObject
      required:
      - access_type
      - status
      type: object
      properties:
        access_type:
         type: string
        status:
         type: boolean
      example:
       access_type: 1,2,3
       status: true
    DriversExportRequestBody:
      title: DriversExportRequestBody
      required:
      - sNo
      - first_name
      - last_name
      - phone
      - last_driver_vehicle
      - total_trips
      - goal
      - safe_score
      - breaking
      - speed
      - cornering
      - acclaration
      - idling
      - harsh_event
      type: object
      properties:
        sNo:
         type: string
        first_name:
         type: string
        last_name:
          type: string
        phone:
          type: string
        last_driver_vehicle:
          type: string
        total_trips:
          type: string
        goal:
          type: string
        safe_score:
          type: string
        breaking:
          type: string
        speed:
          type: string
        cornering:
          type: string
        acclaration:
          type: string
        idiling:
          type: string
        harsh_event:
          type: string
      example:
        sNo: "sNo"
        first_name: "First Name"
        last_name: "Last Name"
        email: "Email"
        phone: "Contact"
        last_driver_vehicle: "Last Driven Vehicle"
        total_trips: "No of trips"
        goal: "Goal Set"
        safe_score: "Safe driving score"
        breaking: "Insightful deceleration"
        speed: "The right speed"
        cornering: "No extra wear cornering"
        acclaration: "Safe Acceleration"
        idiling: "Eco Score"
        harsh_event: "Exceptions"
    DriversExport:
      title: DriversExport
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: boolean
        message:
         type: string
      example:
        data: true
        message: "We will send the export file to your registered email address in 5-10 minutes."
    TripsReport:
      title: TripsReport
      required:
      - data
      type: object
      properties:
        data:
         type: object
         $ref: '#/components/schemas/TripsReportData'
    TripsReportData:
      title: TripsReportData
      required:
      - total_distance
      - total_rides
      - total_vehicle
      - total_exception
      - driving_behaviour
      - driven_too_fast
      - avg_speed
      type: object
      properties:
        total_distance:
         type: string
        total_rides:
         type: string
        total_vehicles:
         type: string
        total_exception:
         type: string
        driving_behaviour:
         type: string
        driven_too_fast:
         type: string
        avg_speed:
         type: string
      example:
        total_distance: "681477.3"
        total_rides: "24751"
        total_vehicle: "705"
        total_exception: "314401"
        driving_behaviour: "8.0"
        driven_too_fast: '0'
        avg_speed: "42.44"
    UserDetails:
      title: UserDetails
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: object
         $ref: '#/components/schemas/UserDetailsData'
        message:
         type: string
         example: "User details fetched successfully"
    UserDetailsData:
      title: UserDetailsData
      required:
      - id
      - firstName
      - lastName
      - role
      - email
      - profile_image
      - language
      - country_code
      - phone
      - status
      - address
      - is_client
      - org_point_of_contact
      - org_details
      type: object
      properties:
        id:
         type: integer
        firstName:
         type: string
        lastName:
         type: string
        role:
         type: integer
        email:
         type: string
        profile_image:
         type: string
        language:
         type: string
        country_code:
         type: string
        phone:
         type: string
        status:
         type: integer
        address:
         type: string
        is_client:
         type: boolean
        org_point_of_contact:
         type: boolean
        org_details:
         type: array
         items:
          type: object
    UpdateDriverRequestBody:
      title: UpdateDriverRequestBody
      required:
      - user_id
      - first_name 
      - last_name
      - email
      - contact 
      - country_code
      - status 
      - groups
      type: object
      properties:
        user_id:
         type: integer
        first_name:
         type: string
        last_name:
         type: string
        email:
         type: string
        contact:
         type: string
        country_code:
         type: string
        status:
         type: string
        groups:
         type: string
      example:
        user_id: 32906
        first_name: "John"
        last_name: "Kennedy"
        email: "johnKenedy@yopmail.com"
        contact: "9867897656"
        country_code: "31"
        status: 1
        groups: ""
    UpdateDriver:
      title: UpdateDriver
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: object
        message:
         type: string
      example:
        data: {}
        message: "Driver has been updated successfully"
    VehicleExportRequestBody:
      title: VehicleExportRequestBody
      required:
      - acclaration_score
      - breaking_score
      - category
      - cornering_score
      - harsh_event
      - idiling_score
      - license_plate
      - model
      - sNo
      - speed_score
      - total_distance
      - total_trips
      - vehicle_score
      - vin
      type: object
      example:
        acclaration_score: "Safe Acceleration"
        breaking_score: "Insightful deceleration"
        category: "Vehicle category"
        cornering_score: "No extra wear"
        harsh_event: "Exceptions"
        idiling_score: "Eco Score"
        license_plate: "License plate"
        model: "Vehicle"
        sNo: "S.No"
        speed_score: "The right speed"
        total_distance: "Total km"
        total_trips: "Total trips"
        vehicle_score: "Safety Score"
        vin : "Vin"
    VehicleExport:
      title: VehicleExport
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: boolean
        message:
         type: string
      example:
        data: true
        message: "We will send the export file to your registered email address in 5-10 minutes." 
    ExceptionsExportRequestBody:
      title: ExceptionsExportRequestBody
      required:
      - acceleration
      - breaking
      - cornering
      - distance
      - idling
      - license_plate
      - limit
      - sNo
      - score_type
      - speed
      - start_exception_time
      - stop_exception_time
      - total_time
      - violation_rate
      type: object
      example:
        acceleration: "Unsafe acceleration"
        breaking: "Non insight traffic deceleration"
        cornering: "Extra wear in corners"
        distance: "Distance (km)"
        idling: "Unnecessary Emissions"
        license_plate: "License"
        limit: "Limit"
        sNo: "S.No"
        score_type: "Exception Type"
        speed: "Driving too fast"
        start_exception_time: "Start exception time"
        stop_exception_time: "Stop exception time"
        total_time: "Total time"
        violation_rate: "Violation Rate"
    ExceptionsExport:
      title: ExceptionsExport
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: boolean
        message:
         type: string
      example:
        data: true
        message: "We will send the export file to your registered email address in 5-10 minutes." 
    ReportExportRequestBody:
      title: ReportExportRequestBody
      required:
      - org_name
      - reseller
      - sNo
      - start_date
      - total_distance
      - total_drivers
      - total_trips
      - total_vehicles
      - tsp
      type: object
      example:
        org_name: "Client"
        reseller: "Reseller"
        sNo: "S.No"
        start_date: "First Data In"
        total_distance: "Kilometers"
        total_drivers: "Drivers"
        total_trips: "Trips"
        total_vehicles: "Vehicle"
        tsp: "TSP"
    ReportExport:
      title: ReportExport
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: boolean
        message:
         type: string
      example:
        data: true
        message: "We will send the export file to your registered email address in 5-10 minutes." 
    ClientUserExportRequestBody:
      title: ClientUserExportRequestBody
      required:
      - contact_number
      - email
      - first_name
      - last_name
      - org_type
      - organisation_name
      - role
      - sNo
      - status
      - user_name
      type: object
      example:
       contact_number: "Contact Number"
       email: "Emai"
       first_name: "First Name"
       last_name: "Last Name"
       org_type: "Org Type"
       organisation _name: "Organisation Name"
       role: "Role"
       sNo: "S.No"
       status: "Status"
       user_name: "User Name"
    ClientUserExport:
      title: ClientUserExport
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: boolean
        message:
         type: string
      example:
        data: true
        message: "We will send the export file to your registered email address in 5-10 minutes." 
    ClientDriverExportRequestBody:
      title: ClientDriverExportRequestBody
      required:
      - contact_number
      - email
      - first_name
      - last_name
      - org_type
      - organisation_name
      - role
      - sNo
      - status
      - user_name
      type: object
      example:
       contact_number: "Contact Number"
       email: "Emai"
       first_name: "First Name"
       last_name: "Last Name"
       org_type: "Org Type"
       organisation _name: "Organisation Name"
       role: "Role"
       sNo: "S.No"
       status: "Status"
       user_name: "User Name"
    ClientDriverExport:
      title: ClientUserExport
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: boolean
        message:
         type: string
      example:
        data: true
        message: "We will send the export file to your registered email address in 5-10 minutes." 
    GroupUserExportRequestBody:
      title: GroupUserExportRequestBody
      required:
      - contact_number
      - email
      - first_name
      - last_name
      - license_plate
      - sNo
      - total_km
      - total_trips
      - vehicel_name
      type: object
      example:
       contact_number: "Contact Number"
       email: "Email"
       first_name: "First Name"
       last_name: "Last Name"
       license_plate: "License plate"
       sNo: "S.No"
       total_km: "Total Kms"
       total_trips: "Total Trips"
       vehicel_name: "Vehicle"
    GroupUserExport:
      title: GroupUserExport
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: boolean
        message:
         type: string
      example:
        data: true
        message: "We will send the export file to your registered email address in 5-10 minutes." 
    DriverShift:
      title: DriverShift
      required:
      - data
      - configurations
      type: object
      properties:
        data:
         type: array
         items:
          type: object
        configurations:
         type: object
         $ref: '#/components/schemas/DriverShiftData'
    DriverShiftData:
      title: DriverShiftData
      required:
      - status
      - action_by
      type: object
      properties:
        status:
         type: object
        action_by:
         type: object
      example:
       status:
        0 : "CHECKED_IN"
        1 : "CHECKED_OUT"
       action_by:
        0 : "DRIVER"
        1 : "SUPER_ADMIN"
        2 : "FLEET_MANAGER"
        3 : "USER"
        4 : "ADMIN"
        5 : "SYSTEM"
    DriverWorstTrips:
      title: DriverWorstTrips
      required:
      - data
      type: object
      properties:
        data:
         type: array
         items:
          type: object
          $ref: '#/components/schemas/DriverWorstTripsData'
    DriverWorstTripsData:
      title: DriverWorstTripsData
      required:
      - id
      - trip_id
      - start_time
      - end_time
      - distance
      - duration_seconds
      - vehicle_id
      - score_type
      - start_waypoint_id
      - end_waypoint_id
      - violation_rate
      - limit
      - driver_id
      - vehicle
      - driver_detail
      - points
      type: object
      properties:
        id:
         type: integer
        trip_id:
         type: string
        start_time:
         type: string
        end_time:
         type: string
        distance:
         type: string
        duration_seconds:
         type: string
        vehicle_id:
         type: integer
        score_type:
         type: string
        start_waypoint_id:
         type: string
        end_waypoint_id:
         type: string
        violation_rate:
         type: integer
        limit:
         type: integer
        vehicle:
         type: object
        driver_detail:
         type: object
        points:
         type: array
         items:
          type: object
      example:
        id: 30857267
        trip_id: "100000000000121383"
        start_time: "2022-09-27T07:02:53.000Z"
        end_time: "2022-09-27T07:06:03.000Z"
        distance: "5.510000"
        duration_seconds: "190.000000"
        vehicle_id: 12589
        score_type: "speed"
        start_waypoint_id: "100000000032965174"
        end_waypoint_id: "100000000032965188"
        violation_rate: 124.083885
        limit: 100
        driver_id: 32906
        vehicle:
         id: 12589
         model: "EV6"
         last_apk_date: "2023-10-22T00:00:00.000Z"
         fuel_type: "Elektriciteit"
         vin: ""
         license_plate: "P5**"
        driver_detail:
         id: 32906
         first_name: "John"
         last_name: "Kennedy"
         email: "johnkenedy@yopmail.com"
        points:
         [
          {
            "id": "100000000032965174",
            "latitude": "52.337387",
            "longitude": "4.848388"
          },
          {
            "id": "100000000032965188",
            "latitude": "52.332344",
            "longitude": "4.929016"
          }
         ]
    VehicleDocumentCheckListRequestBody:
      title: VehicleDocumentCheckListRequestBody
      required:
      - sNo
      - question
      - category
      - answer
      - defaults
      type: object
      properties:
        sNo:
         type: string
        question:
         type: string
        category:
         type: string
        answer:
         type: string
        defaults:
         type: string
      example:
        sNo: "sNo"
        question: "question"
        category: "category"
        answer: "answer"
        defaults: "defaults"
    VehicleDocumentCheckList:
      title: VehicleDocumentCheckList
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: boolean
        message:
         type: string
      example:
        data: true
        message: "We will send the export file to your registered email address in 5-10 minutes." 
    VehicleDamagesExportRequestBody:
      title: VehicleDamagesExportRequestBody
      required:
      - sNo
      - damage_report
      - damage_side
      - reported_on
      - reported_by
      - resolved_on
      - resolved_by
      - images
      type: object
      properties:
        sNo:
         type: string
        damage_report:
         type: string
        reported_on:
         type: string
        reported_by:
         type: string
        resolved_on:
         type: string
        resolved_by:
         type: string
        images:
         type: string
      example:
        sNo: "sNo"
        damage_report: "damage_report"
        damage_side: "damage_side"
        reported_on: "reported_on"
        reported_by: "reported_by"
        resolved_on: "resolved_on"
        resolved_by: "resolved_by"
        images: "images"
    VehicleDamagesExport:
      title: VehicleDamagesExport
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: boolean
        message:
         type: string
      example:
        data: true
        message: "We will send the export file to your registered email address in 5-10 minutes."
    PreVehicleDriverDeclarationRequestBody:
      title: VehicleDriverDeclarationsRequestBody
      required:
      - sNo
      - question
      - category
      - answers
      - report
      type: object
      properties:
        sNo:
         type: string
        question:
         type: string
        category:
         type: string
        answers:
         type: string
        report:
         type: string
      example:
        sNo: "sNo"
        question: "questions"
        category: "category"
        answers: "answers"
        report: "report"
    PreVehicleDriverDeclaration:
      title: VehicleDriverDeclarations
      required:
      - data
      - message
      type: object
      properties:
        data:
         type: boolean
        message:
         type: string
      example:
        data: true
        message: "We will send the export file to your registered email address in 5-10 minutes."
    Logout:
      title: Logout
      required:
      - message
      type: object
      properties:
        message:
         type: string
      example:
        message: "Logout Successfully!"
    ForgotPasswordRequestBody:
      title: ForgotPasswordRequestBody
      required:
      - email
      type: object
      properties:
        email:
         type: string
        portal:
         type: string
      example:
        email: "test@yopmail.com"
        portal: "ZEGO"
    ForgotPassword:
      title: ForgotPassword
      required:
      - message
      type: object
      properties:
        message:
         type: string
        smtp_response:
         type: boolean
      example:
        message: "We have sent code to your registered email address."
        smtp_response: true
    ResetPasswordRequestBody:
      title: ResetPasswordRequestBody
      required:
      - password
      type: object
      properties:
        password:
         type: string
      example:
        password: "test123"
    ResetPassword:
      title: ResetPassword
      required:
      - message
      type: object
      properties:
        message:
         type: string
      example:
        message: "Password reset successfully."
    ChangePasswordRequestBody:
      title: ChangePasswordRequestBody
      required:
      - password
      - current_password
      - confirm_password
      type: object
      properties:
        password:
         type: string
        current_password:
         type: string
        confirm_password:
         type: string
      example:
        password: "Test@123"
        confirm_password: "Test@123"
        current_password: "test123"
    ChangePassword:
      title: ChangePassword
      type: object
      properties:
        message:
         type: string
      example:
         message: "Password has been changed successfully."
    ProfileRequestBody:
      title: ProfileRequestBody
      required:
      - firstName
      - lastName
      - country_code
      - phone
      type: object
      properties:
        firstName:
         type: string
        lastName:
         type: string
        country_code:
         type: string
        phone:
         type: string
      example:
        firstName: "Test"
        lastName: "Test"
        country_code: "31"
        phone: "9878987678"
    Profile:
      title: Profile
      type: object
      properties:
        message:
         type: string
      example:
         message: "Profile updated successfully."
    GetProfile:
      title: GetProfile
      type: object
      properties:
        message:
         type: string
         example: "Profile fetched successfully."
        data:
         type: object
         $ref: '#/components/schemas/GetProfileData'
    GetProfileData:
      title: GetProfileData
      type: object
      properties:
        id:
         type: string
        firstName:
         type: string
        lastName:
         type: string
        address:
         type: string
        color_code:
         type: string
        email:
         type: string
        profile_image:
         type: string
        language:
         type: string
        country_code:
         type: string
        phone:
         type: string
        status:
         type: string
        role:
         type: string
        role_id:
         type: integer
        org_id:
         type: integer
        organization_name:
         type: string
      example:
        id: 1
        firstName: "Su**"
        lastName: "Ad**"
        address: "[{\"key\":\"Speeding\",\"value\":\"d23636\"},{\"key\":\"Idiling\",\"value\":\"00CBA0\"},{\"key\":\"Harsh Acceleration\",\"value\":\"4b6f83\"},{\"key\":\"Harsh Cornering\",\"value\":\"ff7070\"},{\"key\":\"Harsh Braking\",\"value\":\"6cfff2\"}]"
        email: "admin-merlin@yopmail.com" 
        profile_image: "https://merlin-image-upload-dev.s3.eu-central-1.amazonaws.com/2-1673858063145.gif"
        language: "de"
        country_code: "91"
        phone: "1234567890"
        status: 1
        role: Admin
        role_id: 1
        org_id: null
        organization_name: null
    ProfileColorRequestBody:
      title: ProfileColorRequestBody
      type: object
      properties:
        color_code:
         type: string
      example: 
        color_code: "[{\"key\":\"Speeding\",\"value\":\"d23636\"},{\"key\":\"Idiling\",\"value\":\"00CBA0\"},{\"key\":\"Harsh Acceleration\",\"value\":\"4b6f83\"},{\"key\":\"Harsh Cornering\",\"value\":\"ff7070\"},{\"key\":\"Harsh Braking\",\"value\":\"6cfff2\"}]"
    ProfileColor:
      title: ProfileColor
      type: object
      properties:
        message:
         type: string
      example:
         message: "Color code has been updated successfully."
    ClientUpdateRequestBody:
      title: ClientUpdate
      type: object
      required:
      - user_id
      - userRoleId
      - resource_list
      properties:
        user_id:
          type: integer
        userRoleId:
          type: integer
        resource_list:
          type: string
      example:
        user_id: 452
        userRoleId: 2
        resource_list: [
          {"resource_id":2,"resource_name":"Dashboard"},
          {"resource_id":3,"resource_name":"Vehicle"} , 
          {"resource_id":4,"resource_name":"Trips"},
          {"resource_id":5,"resource_name":"Drivers"},
          {"resource_id":6,"resource_name":"Exceptions"},
          {"resource_id":7,"resource_name":"Map View"},
          {"resource_id":11,"resource_name":"Score Comparision"},
          {"resource_id":16,"resource_name":"Report"},
          {"resource_id":17,"resource_name":"Client Management"},
          {"resource_id":19,"resource_name":"TSP"}
          ]
    ClientUpdate:
      title: ClientUpdate
      type: object
      properties:
        data : 
          type: object
        message:
          type: string
      example:
         data: {}
         message: "Record has been updated successfully"
    ClientArchived:
      title: ClientArchived
      type: object
      properties:
        data : 
          type: object
        message:
          type: string
      example:
         data: {}
         message: "Records has been archived successfully"
    ClientResourceList:
      title: ClientResourceList
      type: object
      properties:
        data : 
          type: array
          items:
           $ref: "#/components/schemas/ClientResourceListData"
        message:
          type: string
          example: "Records has been archived successfully"
    ClientResourceListData:
      title: ClientResourceListData
      type: object
      properties:
        resource_name:
         type: string
        resource_id:
         type: integer
      example:
      - resource_id: 2
        resource_name: "Dashboard"
      - resource_id: 3
        resource_name: "Vehicle"
      - resource_id: 4
        resource_name: "trips"
    TripsAlertRequestBody:
      title: TripsAlertRequestBody
      type: object
      properties:
        tripId:
          type: array
          items:
           type: string
           example: "400000000000108861"
    TripsAlert:
      title: TripsAlert
      type: object
      properties:
        data:
         type: object
        waypointList:
         type: object
      example:
        data: {}
        waypointList:
          {
            "400000000000108861":
              [
                {
                  id: "400000000000943220",
                  latitude: "48.762800",
                  longitude: "2.355600",
                  trip_id: "400000000000108861"
                }
              ]
          }
    MobileDrivingAnalyticsGraph:
      title: MobileDrivingAnalyticsGraph
      type: object
      properties:
        data:
          type: array
          items:
           $ref: "#/components/schemas/MobileDrivingAnalyticsGraphData"
    MobileDrivingAnalyticsGraphData:
      title: MobileDrivingAnalyticsGraphData
      required:
      - safe_score
      - date
      - speed_score
      - idling_score
      - acceleration_score
      - breaking_score
      - cornering_score
      type: object
      properties:
        safe_score:
          type: integer
        date:
          type: integer
        speed_score:
          type: string
        idling_score:
          type: string
        acceleration_score:
          type: string
        breaking_score:
          type: string
        cornering_score:
          type: string
      example:
        safe_score: "5.1"
        date: "2022-09-27"
        speed_score: "3.4"
        idling_score: "9.4"
        acceleration_score: "6.2"
        breaking_score: "6.6"
        cornering_score: "0.4"
    TspCompanies:
      title: TspCompaniesData
      type: object
      properties:
        data:
          type: array
          items:
           $ref: "#/components/schemas/TspCompaniesData"
    TspCompaniesData:
      title: TspCompaniesData
      type: object
      properties:
        id: 
         type: integer
        name:
         type: string
        org_category:
         type: string
        parent_node:
         type: integer
      example:
        id: 306
        name: "check PP_GEOTAB"
        org_category: "TSP_Company"
        parent_node: 300
    DriverCheckInOutInfo:
      title: DriverCheckInOutInfo
      type: object
      properties:
        data:
         type: object
         $ref: "#/components/schemas/DriverCheckInOutInfoData"
        configuration:
         type: object
         $ref : "#/components/schemas/DriverCheckInOutInfoConfig"
    DriverCheckInOutInfoData:
      title: DriverCheckInOutInfoData
      type: object
      properties:
        id:
         type: string
        org_id:
         type: integer
        driver_id:
         type: integer
        license_plate_image:
         type: string
        status:
         type: integer
        check_in_date_time:
         type: string
        device_check_in_date_time:
          type: string
        check_out_date_time:
          type: string
        device_check_out_date_time:
          type: string
        start_milage:
          type: string
        end_milage:
          type: string
        total_distance:
          type: string
        total_duration:
          type: string
        action_by:
          type: integer
        vehicle:
          type: object
        driver:
          type: object
      example:
        id: "1"
        org_id: 26
        driver_id: 36375
        license_plate_image: null
        status: 1
        check_in_date_time: "2022-11-28T13:10:10.000Z"
        device_check_in_date_time: "2022-11-28T13:10:10.000Z"
        check_out_date_time: "2022-11-28T13:20:10.000Z"
        device_check_out_date_time: "2022-11-28T13:20:10.000Z"
        start_milage: "120.00"
        end_milage: "123.00"
        total_distance: null
        total_duration: null
        action_by: 0
        vehicle:
         id: 12626
         license_plate: "V-**"
        driver:
         id: 36375
         first_name: "Jo**"
         last_name: "Mo**"
         email: "driver.checkin@yopmail.com"
         country_code: null
         phone: null
         profile_image: null
    DriverCheckInOutInfoConfig:
      title: DriverCheckInOutInfoConfig
      type: object
      properties:
        status:
         type: object
        action_by:
         type: object
      example:
        status:
         0 : "CHECKED_IN"
         1 : "CHECKED_OUT"
        action_by:
         0: "DRIVER"
         1: "SUPER_ADMIN"
         2: "FLEET_MANAGER"
         3: "USER"
         4: "ADMIN"
         5: "SYSTEM"
    DriverCheckedOutRequestBody:
      title: DriverCheckedOut
      type: object
      required:
      - check_out_date_time
      - device_check_out_date_time
      properties:
        id:
         type: string
        end_milage:
          type: string
        check_out_date_time:
          type: string
        device_check_out_date_time:
          type: string
      example:
          id: "129"
          end_milage: null
          check_out_date_time: "2023-02-10 13:40:52.293378" 
          device_check_out_date_time: "2023-02-10 13:41:37.727577" 
    DriverCheckedOut:
      title: DriverCheckedOut
      type: object
      properties:
        data:
         type: object
        message:
         type: string
      example:
        data: {}
        messsage: "Checked out successfully"
    DriverCheckInRequestBody:
      title: DriverCheckInRequestBody
      type: object
      required:
      - org_id
      - vehicle_id
      - vehicle_category
      - check_in_date_time
      - device_check_in_date_time
      - check_in_utc_date_time
      properties:
        org_id:
         type: integer
         example: 26
        vehicle_id:
         type: integer
         example: 12626
        license_plate_image:
         type: string
         example: "https://s3-eu-central-1.amazonaws.com/merlin-image-upload-preprod/CAP7511707785464040531.jpg"
        check_in_date_time:
         type: string
         example: "2022-11-28 13:10:10"
        device_check_in_date_time:
         type: string
         example: "2022-11-28 13:10:10"
        check_in_utc_date_time:
         type: string
         example: "2022-11-28 13:10:10"
        vehicle_category:
         type: integer
         example: 6
    DriverCheckIn:
      title: DriverCheckIn
      type: object
      properties:
        data:
         type: object
        message:
         type: string
      example:
        data: {}
        messsage: "Checked in successfully"
    VehicleDamage:
      title: VehicleDamage
      type: object
      properties:
        data:
         type: array
         items:
         $ref: "#/components/schemas/VehicleDamageData"
    VehicleDamageData:
      title: VehicleDamageData
      type: object
      properties:
        id:
         type: string
        position:
         type: string
        coordinates:
         type: object
        vehicle_id:
         type: integer
      example:
        id: "2"
        position: "Left"
        coordinates: {
         x: 86.42857142857142,
         y: 67.7142857142857
        }
        vehicle_id: 12664
    VehicleDamageDetails:
      title: VehicleDamageDetails
      type: object
      properties:
        data:
         type: object
         $ref: '#/components/schemas/VehicleDamageDetailsData'
    VehicleDamageDetailsData:
      title: VehicleDamageDetailsData
      type: object
      properties:
        id:
         type: string
        position:
         type: string
        coordinates:
         type: object
        vehicle_id:
         type: integer
        reported_on:
         type: string
        images:
         type: array
         items:
          type: string
        is_resolved:
         type: boolean
        remarks:
         type: string
      example:
        id: "3"
        position: "Left"
        coordinates:
         x: 293
         y: 78.00000000000003
        vehicle_id: 12664
        reported_on: "2023-01-12T17:54:01.000Z"
        images: [
          "https://media.istockphoto.com/id/850346406/photo/car-crash-accident-on-the-road.jpg?s=612x612&w=0&k=20&c=ELVAn_4jVdk-t1si5RUtlmRO8iezDy--n8fcq8hUdmk="
        ]
        is_resolved: true
        remarks: "Very critical condition"
    AddVehicleDamageRequestBody:
      title: AddVehicleDamageRequestBody
      type: object
      required:
      - position
      - coordinates
      - images
      - reported_on
      properties:
        position:
         type: string
         example: "Left"
        coordinates:
         type: object
         example:
          x: 293
          y: 78.00000000000003
        images:
         type: string
         example: [
          "https://media.istockphoto.com/id/850346406/photo/car-crash-accident-on-the-road.jpg?s=612x612&w=0&k=20&c=ELVAn_4jVdk-t1si5RUtlmRO8iezDy--n8fcq8hUdmk="
          ]
        remarks:
         type: string
         example: "Very critical"
        reported_on:
         type: string
         example: "2023-01-12T17:54:01.000Z"
    AddVehicleDamage:
      title: AddVehicleDamage
      type: object
      properties:
       data:
        type: object
        $ref: '#/components/schemas/AddVehicleDamageData'
    AddVehicleDamageData:
      title: AddVehicleDamageData
      type: object
      properties:
       is_resolved:
        type: boolean
       id:
        type: string
       position:
        type: string
       reported_by:
        type: integer
       vehicle_id:
        type: integer
       coordinates:
        type: object
       images:
        type: array
        items:
         type: string
       remarks:
         type: string
       reported_on:
         type: string
       updatedAt:
         type: string
       createdAt:
         type: string
       resolved_by:
         type: string
       resolved_on:
         type: string
       user_type:
         type: integer
      example:
        is_resolved: false
        id: "13"
        position: "Left"
        reported_by: 1
        vehicle_id: 12626
        coordinates: {
            "x": 293,
            "y": 78.00000000000003
        }
        images: [
            "https://media.istockphoto.com/id/850346406/photo/car-crash-accident-on-the-road.jpg?s=612x612&w=0&k=20&c=ELVAn_4jVdk-t1si5RUtlmRO8iezDy--n8fcq8hUdmk="
        ]
        remarks: null
        reported_on: "2023-01-12T17:54:01.000Z"
        updatedAt: "2023-02-13T07:31:27.727Z"
        createdAt: "2023-02-13T07:31:27.727Z"
        resolved_by: null
        resolved_on: null
        user_type: null
    VehicleDamageResolutionRequestBody:
      title: VehicleDamageResolutionRequestBody
      type: object
      required:
      - resolved_on
      properties:
        resolved_on:
          type: string
          example: "2023-01-12T17:54:01.000Z"
    VehicleDamageResolution:
      title: VehicleDamageResolution
      type: object
      properties:
       is_resolved:
        type: boolean
       id:
        type: string
       position:
        type: string
       reported_by:
        type: integer
       vehicle_id:
        type: integer
       coordinates:
        type: object
       images:
        type: array
        items:
         type: string
       remarks:
         type: string
       reported_on:
         type: string
       updatedAt:
         type: string
       createdAt:
         type: string
       resolved_by:
         type: string
       resolved_on:
         type: string
       user_type:
         type: integer
      example:
        is_resolved: true
        id: "13"
        position: "Left"
        reported_by: 1
        vehicle_id: 12626
        coordinates: {
            "x": 293,
            "y": 78.00000000000003
        }
        images: [
            "https://media.istockphoto.com/id/850346406/photo/car-crash-accident-on-the-road.jpg?s=612x612&w=0&k=20&c=ELVAn_4jVdk-t1si5RUtlmRO8iezDy--n8fcq8hUdmk="
        ]
        remarks: null
        reported_on: "2023-01-12T17:54:01.000Z"
        updatedAt: "2023-02-13T07:31:27.727Z"
        createdAt: "2023-02-13T07:31:27.727Z"
        resolved_by: 1
        resolved_on: "2023-01-12T17:54:01.000Z"
        user_type: "1"
    VehicleDocumentCheckListOrg:
      title: VehicleDocumentCheckListOrg
      type: object
      properties:
        data:
         type: array
         items:
          $ref: '#/components/schemas/VehicleDocumentCheckListData'
    VehicleDocumentCheckListData:
      title: VehicleDocumentCheckListData
      type: object
      properties:
        id:
         type: string
        org_id:
         type: integer
        category_id:
         type: integer
        question_text:
         type: object
        answer_options:
         type: array
         items:
          type: object
      example:
        id: 35
        org_id: 172
        category_id: 1
        question_text:
         en: "Driving license"
         du: "Rijbewijs"
        answer_options:
         [
           {
            text:{
              en: "Yes",
              du: "Ja"
            },
            default: false,
            is_remarks: false
           }
         ]
    PreVehicleDriverDeclaration2:
      title: PreVehicleDriverDeclaration2
      type: object
      properties:
        data:
         type: array
         items:
          $ref: '#/components/schemas/PreVehicleDriverDeclarationData'
        categories:
         type: object
         example:
           1: "Document checklist"
           2: "Saftey/Vehicle status checklist"
    PreVehicleDriverDeclarationData:
      title: PreVehicleDriverDeclarationData
      type: object
      properties:
        question:
          type: object
        category_id:
          type: integer
        answers:
          type: array
          items:
           type: object
        remarks:
         type: string
      example:
        question:
          id: 2
          test:
           en: "Driving license"
           du: "Rijbewijs"
          category_id: 1
          answers: [
            {
              text: {
                en: "Yes",
                du: "Ja"
              },
              selected: true
            }
          ]
    VehicleDocumentCheckListQuestionsRequestBody:
      title: VehicleDocumentCheckListQuestionsRequestBody
      type: object
      required:
      - question_text
      - category_id
      - answer_options
      properties:
        question_text:
          type: object
          example:
           text:
            en: "Driving license"
            du: "Rijbewijs"
        category_id:
          type: integer
          example: 1
        answer_options:
          type: array
          items:
           type: object
           example:
            text:
             en: "Yes"
             du: "Ja"
            selected: true
    VehicleDocumentCheckListQuestions:
      title: VehicleDocumentCheckListQuestions
      type: object
      properties:
       data:
        type: object
        $ref: '#/components/schemas/VehicleDocumentCheckListQuestionsData'
    VehicleDocumentCheckListQuestionsData:
      title: VehicleDocumentCheckListQuestionsData
      type: object
      properties:
       id: 
        type: string
       org_id:
        type: integer
       category_id:
        type: integer
       question_text:
        type: object
       answer_options:
        type: array
        items:
         type: object
       updatedAt:
         type: string
       createdAt:
         type: string
       is_deleted:
         type: boolean
      example:
        id: "68"
        org_id: 172
        category_id: 1
        question_text:
         en: "Driving license"
         du: "Rijbewijs"
        answer_options: [
          {
            text:{
              en: "Yes",
              du: "Ja"
            },
            selected: true
          }
        ]
        updatedAt: "2023-02-13T09:51:14.805Z"
        createdAt: "2023-02-13T09:51:14.805Z"
        is_deleted: false
    VehicleDocumentCheckListOrgQuestionsRequestBody:
      title: VehicleDocumentCheckListOrgQuestionsRequestBody
      type: object
      properties:
       question_text:
         type: string
         example:
          en: "Driving license"
          du: "Rijbewijs"
       category_id:
         type: integer
         example: 1
       answer_options:
         type: array
         items:
           type: object
           example: {
              text: {
              en: "Yes",
              du: "Ja"
                },
            selected: true
           }
    VehicleDocumentCheckListQuestionsDelete:
      title: VehicleDocumentCheckListQuestionsDelete
      type: object
      properties:
        message:
          type: string
          example: "Question data deleted successfully."
    DriverLoginRequestBody:
      title: DriverLoginRequestBody
      required:
      - email
      - password
      type: object
      properties:
        email:
         type: string
        password:
         type: string
      example:
        email: "drivertest09@yopmail.com"
        password: "HelloMobility@123"
    DriverLogin:
      title: DriverLogin
      type: object
      properties:
        data:
         type: object
         $ref: "#/components/schemas/DriverLoginData"
    DriverLoginData:
      title: DriverLoginData
      type: object
      properties:
        id:
         type: integer
        email:
         type: string
        status:
         type: integer
        phone:
         type: string
        address:
         type: string
        first_name:
         type: string
        last_name:
         type: string
        token:
         type: string
        org_id:
         type: integer
        driver_identification:
         type: object
      example:
        id: 36536
        email: "drivertest09@yopmail.com"
        status: 1
        phone: "9898789878"
        address: "holland"
        first_name: "Jo**"
        last_name: "Ar**"
        token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRyaXZlcnRlc3QwOUB5b3BtYWlsLmNvbSIsInVzZXJJZCI6MzY1MzYsInJvbGUiOiJkcml2ZXIiLCJpYXQiOjE2NzYzNjgxMDYsImV4cCI6MTY4MTU1MjEwNn0.850dccwwxU82ikvChQJ5ZbE1IVFBhNLA4efDvATveqY"
        org_id: 198
        driver_identification:
         status: false
         access_type: ""
    DriverForgotPasswordRequestBody:
      title: DriverForgotPasswordRequestBody
      type: object
      required:
      - email
      properties:
        email:
         type: string
         example: "drivertest09@yopmail.com"
    DriverForgotPassword:
      title: DriverForgotPassword
      type: object
      properties:
        message:
         type: string
         example: "We have sent otp to your registered email address."
    DriverChangePasswordRequestBody:
      title: DriverForgotPasswordRequestBody
      type: object
      required:
      - oldPassword
      - newPassword
      - confirmPassword
      properties:
        oldPassword:
         type: string
         example: "HelloMobility@123"
        newPassword:
         type: string
         example: "HelloMobility@123"
        confirmPassword:
         type: string
         example: "HelloMobility@123"
    DriverChangePassword:
      title: DriverChangePassword
      type: object
      properties:
        message:
         type: string
         example: "Password changed successfully."
    DriverUpdateProfileRequestBody:
      title: DriverUpdateProfileRequestBody
      type: object
      properties:
        phone:
         type: string
         example: "9919642427"
        country_code:
          type: string
          example: "31"
        profile_image:
         type: string
         example: "Dr**"
        first_name:
         type: string
        last_name:
         type: string
         example: "As**"
    DriverUpdateProfile:
      title: DriverUpdate
      type: object
      properties:
        message:
         type: string
         example: "Driver updated successfully."   
    IdentificationDriverList:
      title: IdentificationDriverList
      type: object
      properties:
        data:
         type: object
         example: {
          count: 0,
          rows: []
         }
    DriverResetPasswordRequestBody:
      title: DriverUpdate
      type: object
      required:
      - newPassword
      - confirmPassword
      properties:
        newPassword:
         type: string
         example: "HelloMobility@123"  
        confirmPassword:
         type: string
         example: "HelloMobility@123" 
    DriverResetPassword:
      title: DriverResetPassword
      type: object
      properties:
        message:
         type: string
         example: "Password changed successfully."
    DriverCreateGoalRequestBody:
      title: DriverCreateGoalRequestBody
      type: object
      required:
      - goals
      - driver_id
      - goal_date
      properties:
        goals:
         type: object 
         example: [
          {
            goal: 0,
            exception_type: "speed"
          }
         ]
        driver_id:
         type: integer
         example: 36591
        goal_date:
         type: string
         example: "2023-02-15"
    DriverCreateGoal:
      title: DriverCreateGoal
      type: object
      properties:
        message:
         type: string
         example: "Goal added successfully!"
    DriverUpdateGoalRequestBody:
      title: DriverUpdateGoalRequestBody
      type: object
      required:
      - goals
      properties:
        goals:
         type: object
         example: [
          {
            id: 27,
            goal: 5,
            exception_type: "speed",
            driver_id: 32913,
            goal_date: "2023-02-15"
          }
         ]
    DriverUpdateGoal:
      title: DriverUpdateGoal
      type: object
      properties:
        message:
         type: string
         example: "Goal details updated successfully!"
    GetDriverGoal:
      title: GetDriverGoal
      type: object
      properties:
        message:
         type: string
         example: "Data fetched successfully!"
        data:
         type: array
         items:
         $ref: '#/components/schemas/GetDriverGoalData'
    GetDriverGoalData:
      title: GetDriverGoalData
      type: object
      properties:
        id:
         type: integer
        driver_id:
         type: integer
        goal:
         type: integer
        exception_type:
         type: string
        goal_date:
         type: string
        is_active:
         type: boolean
        createdAt:
         type: string
        updatedAt:
         type: string
      example:
        id: 3
        driver_id: 36591
        goal: 8
        exception_type: "idling"
        goal_date: "2022-07-26"
        is_active: true
        createdAt: "2022-11-01T11:33:10.289Z"
        updatedAt: "2022-11-01T11:33:10.289"
    DriverOTPVerificationRequestBody:
      title: DriverOTPVerificationRequestBody
      type: object
      properties:
        email:
         type: string
         example: "drivertest09@yopmail.com"
        otp:
         type: string
         example: "1234"
    DriverOTPVerification:
      title: DriverOTPVerification
      type: object
      properties:
        message:
         type: string
         example: "Otp match sucessfully"
        data:
         type: object
         example: {
          token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRyaXZlcnRlc3QwOUB5b3BtYWlsLmNvbSIsInVzZXJJZCI6MzY1MzYsInJvbGUiOiJkcml2ZXIiLCJpYXQiOjE2NzYzNjgxMDYsImV4cCI6MTY4MTU1MjEwNn0.850dccwwxU82ikvChQJ5ZbE1IVFBhNLA4efDvATveqY"
         }
    DriversGoalGraph:
      title: DriversGoalGraph
      type: object
      properties:
       message:
        type: string
        example: "Data fetched successfully!!"
       data:
        type: array
        items:
        $ref: '#/components/schemas/DriversGoalGraphData'
      example:
        message: "Data fetched successfully!!"
        data: [
          {
            report_date: "2022-09-27",
            driver_id: 32913,
            speed_score: "6.4",
            goal: 5
          },
          {
            report_date: "2022-09-28",
            driver_id: 32913,
            speed_score: "7.4",
            goal: 5
          }
        ]
    DriversGoalGraphData:
      title: DriversGoalGraphData
      type: object
      properties:
        report_date:
         type: string
        driver_id:
         type: integer
        speed_score:
         type: string
        goal:
         type: integer
    ScoreComparison:
      title: ScoreComparison
      type: object
      properties:
        graph_data:
         type: array
         items:
          $ref: '#/components/schemas/ScoreComparisonGraphData'
        report_data:
          type: object
          $ref: '#/components/schemas/ScoreComparisonReportData'
        message:
          type: string
          example: "Data fetch successful"
    ScoreComparisonGraphData:
      title: ScoreComparisonGraphData
      type: object
      properties:
        report_date:
          type: string
        safe_score:
          type: string
        speed_score:
          type: string
        idling_score:
          type: string
        cornering_score:
          type: string
        breaking_score:
          type: string
        acceleration_score:
          type: string
      example:
        report_date: "2022-02-01"
        safe_score: null
        speed_score: 1001
        idling_score: 1001
        cornering_score: 1001
        breaking_score: 1001
        acceleration_score: 1001
    ScoreComparisonReportData:
      title: ScoreComparisonReportData
      type: object
      properties:
        safe_score:
          type: string
        speed_score:
          type: string
        idling_score:
          type: string
        cornering_score:
          type: string
        breaking_score:
          type: string
        acceleration_score:
          type: string
      example:
        safe_score: 6.4
        speed_score: 6.4
        idling_score: 9.0
        cornering_score: 1001
        breaking_score: 6.7
        acceleration_score: 3.4
    VehicleReport:
      title: VehicleReport
      type: object
      properties:
        data:
         type: object
         $ref: '#/components/schemas/VehicleReportData'
    VehicleReportData:
      title: VehicleReportData
      type: object
      properties:
        total_distance: 
          type: integer
        total_rides:
          type: string
        total_vehicles:
          type: string
        safe_driving_score:
          type: string
    CheckInoutTripList:
      title: CheckInoutTripList
      type: object
      properties:
        data:
         type: object
         $ref: '#/components/schemas/CheckInoutTripListData'
    CheckInoutTripListData:
      title: CheckInoutTripListData
      type: object
      properties:
        count:
         type: integer
         example: 1
        rows:
         type: array
         items:
          type: object
          $ref: '#/components/schemas/CheckInoutTripListRows'
    CheckInoutTripListRows:
      title: CheckInoutTripListDataRows
      type: object
      properties:
        id:
         type: string
        vehicle_id:
         type: integer
        start_date_time:
         type: string
        stop_date_time:
         type: string
        distance:
         type: integer
        start_location_address:
         type: string
        stop_location_address:
         type: string
        start_latitude:
         type: string
        start_longitude:
         type: string
        finish_latitude:
         type: string
        finish_longitude:
         type: string
        license_plate:
         type: string
        total_exception:
         type: integer
        safe_score:
         type: string
        driver_detail:
         type: object
      example:
        id: "700000000000080802"
        vehicle_id: 12626
        start_date_time: "2022-10-03T12:09:32.000Z"
        stop_date_time: "2022-10-03T12:21:30.000Z"
        distance: 4
        start_location_address: "De Driest 18 Nijkerk 3861RD"
        stop_location_address: "Oude Barneveldseweg 65 Nijkerk Gld 3862PS "
        start_latitude: "52.240698"
        start_longitude: "5.481233"
        finish_latitude: "52.216737"
        finish_longitude: "5.501682"
        license_plate: "V-885-KX"
        total_exception: 6
        safe_score: "8.8"
        driver_detail:
         id: 36375
         first_name: "Jo**"
         last_name: "Mo**"
         email: "driver.checkin@yopmail.com"
    TspList:
      title: TspList
      type: object
      properties:
        count:
         type: integer
         example: 1
        rows:
         type: array
         items:
          type: object
          $ref: '#/components/schemas/TspListData'
    TspListData:
      title: TspListData
      type: object
      properties:
        name:
         type: string
        id:
         type: integer
        createdAt:
          type: string
        start_date:
          type: string
        created_by:
          type: string
        archived_date:
          type: string
      example:
        name: "check PP_TRANSICS"
        id: 304
        createdAt: "2023-02-01T06:14:56.459Z"
        start_date: "2023-01-20"
        created_by: "qw@yopmail.com"
        archived_date: null
    AddTspRequestBody:
      title: TspListData
      type: object
      required:
      - tsp_name
      - database
      - user_name
      - password
      - start_date
      properties:
        tsp_name:
         type: string
         example: "GEOTAB"
        database:
         type: string
         example: "prodrive"
        user_name:
          type: string
          example: "dev@gribb.tech"
        password:
          type: string
          example: "HelloMobility@123"
        start_date:
          type: string
          example: "2023-01-25"
    AddTsp:
      title: AddTsp
      type: object
      properties:
       message:
        type: string
        example: "TSP details successfully added"
    ArchiveTspRequestBody:
      title: ArchiveTspRequestBody
      type: object
      properties:
       archived_date:
         type: string
         example: "2023-02-04"
    ArchiveTsp:
      title: ArchiveTsp
      type: object
      properties:
       message:
         type: string
         example: "Archive date successfully updated"
    UpdateTspRequestBody:
      title: UpdateTspRequestBody
      type: object
      required:
      - tsp_name
      - database
      - user_name
      - password
      - start_date
      properties:
        tsp_name:
         type: string
         example: "GEOTAB"
        database:
         type: string
         example: "prodrive"
        user_name:
          type: string
          example: "dev@gribb.tech"
        password:
          type: string
          example: "HelloMobility@123"
        start_date:
          type: string
          example: "2023-01-25"
    UpdateTsp:
      title: UpdateTsp
      type: object
      properties:
       message:
        type: string
        example: "TSP successfully updated"
    clientAssetsCount:
      title: clientAssetsCount
      type: object
      properties:
       data:
        type: object
        $ref: '#/components/schemas/clientAssetsCountData'
    clientAssetsCountData:
      title: clientAssetsCountData
      type: object
      properties:
        tspCount:
         type: integer
        driversCount:
         type: integer
        vehiclesCount:
         type: integer
      example:
        tspCount: 2
        driversCount: 6
        vehiclesCount: 8
    TspDetails:
      title: TspDetails
      type: object
      properties:
        data:
         type: object
         example:
          tsp_name: "GEOTAB1"
          start_date: "2022-09-01"
          user_name: "dev@gribb.tech"
          password: "HelloMobility@123"
          database : "prodrive"
    IngestionData:
      title: IngestionData
      type: object
      properties:
        data:
         type: array
         items:
          type: object
      example:
        data: []
    TspExportRequestBody:
      title: TspExportRequestBody
      type: object
      required:
      - sNo
      - tspName
      - tspAddDate
      - tspStartDate
      - tspEndDate
      - addedBy
      properties:
        sNo:
         type: string
         example: "S_No"
        tspName:
         type: string
         example: "Tsp_Name"
        tspAddDate:
          type: string
          example: "Tsp_Add_Date"
        tspStartDate:
          type: string
          example: "Tsp_Start_Date"
        tspEndDate:
          type: string
          example: "Tsp_End_Date"
        addedBy:
          type: string
          example: "Added_By"
    TspExport:
      title: TspExport
      type: object
      properties:
        message:
          type: string
          example: "We will send the export file to your registered email address in 5-10 minutes."
        data:
          type: boolean
          example: true
    TspVerification:
      title: TspVerification
      type: object
      properties:
        status:
         type: boolean
         example: true
        message:
          type: string
          example: "Verification successful"
    OrganisationTsps:
      title: OrganisationTsps
      type: object
      properties:
        data:
         type: object
         $ref: '#/components/schemas/OrganisationTspsData'
    OrganisationTspsData:
      title: OrganisationTspsData
      type: object
      properties:
        count:
         type: integer
         example: 1
        rows:
         type: array
         items:
           $ref: '#/components/schemas/OrganisationTspsRow'
    OrganisationTspsRow:
      title: OrganisationTspsRow
      type: object
      properties:
        id:
         type: integer
         example: 1
        tsp_name:
          type: string
          example: "GEOTAB"
        config_fields:
          type: array
          items:
           type: string
          example:
          - "user_name"
          - "password"
          - "database"
    ContactSupportRequestBody:
      title: ContactSupportRequestBody
      type: object
      properties:
        subject:
         type: string
         example: "something"
        feedback:
         type: string
         example: "some feedback"
    ContactSupport:
      title: ContactSupport
      type: object
      properties:
        message:
         type: string
         example: "Submitted Successfully"
    JiraTicketRequestBody:
      title: JiraTicketRequestBody
      type: object
      properties:
        summary:
         type: string
         example: "something"
        issue_type:
         type: string
         example: "something"
        description:
         type: string
         example: "something"
        isInstructor:
         type: boolean
         example: true
    AppVersion:
      title: AppVersion
      type: object
      properties:
        data:
         type: object
         $ref: '#/components/schemas/AppVersionData'
    AppVersionData:
      title: AppVersionData
      type: object
      properties:
        os_type:
         type: string
         example: 1
        version:
         type: string
         example: "1.2.1"
        is_mandatory:
         type: boolean
         example: false
    AppVersionRequestBody:
      title: AppVersionRequestBody
      type: object
      properties:
        app_name:
          type: string
          example: "gribb"
        os_type:
          type: integer
          example: 1
        version:
          type: string
          example: "1.3.2"
    AddAppVersion:
      title: AddAppVersion
      type: object
      properties:
        data:
         type: object
         $ref: '#/components/schemas/AddAppVersionData'
    AddAppVersionData:
      title: AddAppVersionData
      type: object
      properties:
        id: 
         type: integer
         example: 15
        app_name:
         type: string
         example: "gribb"
        os_type:
         type: integer
         example: 1
        version:
         type: string
         example: "1.3.2"
        is_mandatory:
         type: boolean
         example: false
    TripException:
      title: TripException
      type: object
      properties:
        data:
         type: object
         $ref: '#/components/schemas/TripExceptionData'
    TripExceptionData:
      title: TripExceptionData
      type: object
      properties:
        speed:
          type: array
          items:
            type: object
          example: []
        acceleration:
          type: array
          items:
            type: object
          example: []
        breaking:
          type: array
          items:
            type: object
          example: []
        cornering:
          type: array
          items:
            type: object
          example: []
        idling:
          type: array
          items:
            type: object
          example: []
            


         


      
         
      
        

          
             

  securitySchemes:
    bearerAuth:           
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []